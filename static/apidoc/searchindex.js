Search.setIndex({"docnames": ["index", "masmod", "masmod.api", "masmod.api.data", "masmod.api.estimation", "masmod.api.simulation", "masmod.ast_worker", "masmod.ast_worker.if_else", "masmod.compiler", "masmod.functional", "masmod.module", "masmod.plot", "masmod.symbols", "masmod.translator", "modules"], "filenames": ["index.rst", "masmod.rst", "masmod.api.rst", "masmod.api.data.rst", "masmod.api.estimation.rst", "masmod.api.simulation.rst", "masmod.ast_worker.rst", "masmod.ast_worker.if_else.rst", "masmod.compiler.rst", "masmod.functional.rst", "masmod.module.rst", "masmod.plot.rst", "masmod.symbols.rst", "masmod.translator.rst", "modules.rst"], "titles": ["Masmod Python Api Reference", "masmod package", "masmod.api package", "masmod.api.data package", "masmod.api.estimation package", "masmod.api.simulation package", "masmod.ast_worker package", "masmod.ast_worker.if_else package", "masmod.compiler package", "masmod.functional package", "masmod.module package", "masmod.plot package", "masmod.symbols package", "masmod.translator package", "masmod"], "terms": {"index": [2, 3], "modul": [0, 14], "search": [], "page": [], "api": [1, 14], "data": [1, 2, 4, 5, 11], "estim": [1, 2], "submodul": [0, 1, 14], "bootstrap": [1, 2], "estimation_method": [1, 2], "estimation_result": [1, 2], "fit_result": [1, 2], "vpc": [1, 2], "wre": [1, 2], "simul": [1, 2, 4], "parameter_set": [1, 2], "model": [0, 1, 3, 4, 12, 14], "popmodel": [1, 2], "compute_ipr": [1, 2], "compute_pr": [1, 2], "conditional_distribut": [1, 2], "empirical_bayesian_estim": [1, 2, 4], "fit": [1, 2, 4], "importance_sampl": [1, 2], "init_pop_param": [1, 2, 4], "mod": [1, 2, 4, 5], "model_ptr": [1, 2, 4, 5], "nonmem_compat": [0, 1, 14], "translateresult": [1, 2], "ctl_sourc": [1, 2], "mod_sourc": [1, 2], "work_dir": [1, 2], "read_nonmem_data": [1, 2], "split_nonmem_data": [1, 2], "translate_nonmem": [1, 2], "paramet": [0, 1, 3, 4, 5, 6, 9, 11, 12, 14], "popparam": [1, 2, 4], "as_panda": [1, 2], "as_tabular_data": [1, 2], "epsilon_nam": [1, 2], "eta_nam": [1, 2], "from_ditto": [1, 2], "theta_nam": [1, 2], "pk": [0, 1, 14], "evonecmtlinear": [1, 2], "index_dosing_cmt": [1, 2, 10], "index_observe_cmt": [1, 2, 10], "n_cmt": [1, 2, 6, 10], "trans1": [1, 2], "trans2": [1, 2], "evthreecmtlinear": [1, 2], "trans4": [1, 2], "trans6": [1, 2], "evtwocmtlinear": [1, 2], "trans3": [1, 2], "trans5": [1, 2], "ivonecmtlinear": [1, 2], "ivonecmtmichaelismenten": [1, 2], "ivthreecmtlinear": [1, 2], "ivtwocmtlinear": [1, 2], "plot": [0, 1, 3, 4, 5, 14], "gofplot": [1, 2, 4, 11], "igroupbyableplotlyplot": [1, 2, 11], "groupbi": [1, 2, 11], "iplotlyplot": [1, 2, 11], "figur": [1, 2, 4, 11], "show": [1, 2, 4, 11], "indfitplot": [1, 2, 4, 11], "iterplot": [1, 2, 4, 11], "type": [0, 1, 3, 4, 5, 6, 11, 12, 14], "iestimationresult": [1, 2], "compute_s": [1, 2, 4], "converg": [1, 2, 4], "final_obj_v": [1, 2, 4], "final_pop_param": [1, 2, 4], "ipr": [1, 2, 4, 11], "iter_detail": [1, 2, 4], "n_iter": [1, 2, 4], "plot_goodness_of_fit": [1, 2, 4], "plot_individual_fit": [1, 2, 4], "pred": [1, 2, 4, 6, 10, 11, 13], "rse": [1, 2, 4], "shrinkag": [1, 2, 4], "ipopmodel": [1, 2], "isimulationresult": [1, 2], "plot_individu": [1, 2, 5], "plot_interv": [1, 2, 5], "simulated_df": [1, 2, 5], "y": [1, 2, 3, 5, 6, 11, 13], "block": [1, 2, 12], "as_ful": [1, 2, 12], "dimens": [1, 2, 12], "tril": [1, 2, 12], "estimationresult": [1, 2, 4], "elapsed_tim": [1, 2, 4, 5], "previous_est_result": [1, 2, 4], "fo": [1, 2, 4], "focei": [1, 2, 4], "fitresult": [1, 2, 4], "plot_iteration_trac": [1, 2, 4], "laplac": [1, 2, 4], "logginglogg": [1, 2], "actionondispos": [1, 2], "add_handl": [1, 2], "critic": [1, 2], "debug": [1, 2], "error": [1, 2, 4], "info": [1, 2, 4], "name": [1, 2, 3, 4, 6, 11], "warn": [1, 2], "modeldata": [1, 2, 3, 4, 5], "__add__": [1, 2, 3], "add_covari": [1, 2, 3], "add_dos": [1, 2, 3], "add_sampl": [1, 2, 3], "copi": [1, 2, 3, 12], "dose": [1, 2, 3, 12], "explore_bivariate_plot": [1, 2, 3], "explore_contour_plot": [1, 2, 3], "explore_covariates_plot": [1, 2, 3], "nob": [1, 2, 3], "reserved_colnam": [1, 2, 3], "sampl": [1, 2, 3, 4], "parameterset": [1, 2, 5], "to_dict": [1, 2, 5], "saem": [1, 2, 4], "column": [1, 2, 3, 4, 5, 11, 12], "compart": [1, 2, 3, 6, 12, 13], "et": [1, 2, 3], "exp": [1, 2, 9], "as_real_imag": [1, 2, 9], "base": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "default_assumpt": [1, 2, 9], "eval": 1, "fdiff": [1, 2, 9], "taylor_term": [1, 2, 9], "likelihood": [1, 2, 6, 10, 13], "ln": [1, 2, 9], "log": [1, 2, 3, 4, 5, 9, 11], "as_base_exp": [1, 2, 9], "invers": [1, 2, 9], "mu": [1, 2, 12], "neg2ll": [1, 2, 10], "omega": [1, 2, 4, 12], "sigma": [1, 2, 4, 12], "theta": [1, 2, 5, 12, 13], "ast_work": [0, 1, 14], "if_els": [1, 6], "condition_hoist": [1, 6], "variable_hoist": [1, 6], "variable_overrid": [1, 6], "autodiff": [0, 1, 14], "autodiffdadtwrt": [1, 6], "cmt": [1, 2, 3, 6], "wrt": [1, 6], "wrt2nd": [1, 6], "autodiffnodetransform": [1, 6], "insert_dosing_deriv_inlin": [1, 6], "insert_param_deriv_inlin": [1, 6], "insert_t0_update_inlin": [1, 6], "subroutin": [1, 6, 13], "visit_assign": [1, 6, 7], "visit_attribut": [1, 6], "visit_cal": [1, 6], "visit_if": [1, 6, 7], "autodifftargetwrt": [1, 6], "target_nam": [1, 6], "func_return": [0, 1, 14], "funcreturnvisitor": [1, 6], "func_def": [1, 6], "return_expr": [1, 6], "visit_functiondef": [1, 6], "visit_return": [1, 6], "integral_t_transform": [0, 1, 14], "integralttransform": [1, 6], "visit_nam": [1, 6], "ifelsetransform": [1, 6, 7], "visit": [1, 6, 7], "compil": [0, 1, 14], "cc_compil": [0, 1, 14], "cccompil": [1, 8], "compileresult": [1, 8], "target_fil": [1, 8], "function": [0, 1, 4, 14], "pk_modul": [0, 1, 14], "pkmodul": [1, 2, 10], "abstract": [0, 1, 2, 10, 14], "abstractplotlyplot": [1, 2, 11], "abstract_groupbi": [0, 1, 14], "abstractgroupbyableplotlyplot": [1, 2, 4, 11], "explor": [0, 1, 2, 3, 14], "bivariateplot": [1, 2, 3, 11], "contourplot": [1, 2, 3, 11], "covariatesplot": [1, 2, 3, 11], "luv_to_xyz": [1, 11], "xyz_to_rgb": [1, 11], "eda_corr_plot_df": [1, 11], "get_color": [1, 11], "polarluv_to_luv": [1, 11], "gof_plot": [0, 1, 14], "diagonal_rang": [1, 11], "trend_lin": [1, 11], "ind_fit_plot": [0, 1, 14], "interfac": [0, 1, 14], "iter_plot": [0, 1, 14], "simulate_plot": [0, 1, 14], "simulateindividualplot": [1, 2, 5, 11], "simulateintervalplot": [1, 2, 5, 11], "fill_color": [1, 11], "percent": [1, 11], "symbol": [0, 1, 2, 5, 6, 13, 14], "varcontext": [1, 6, 7, 12, 13], "as_dict": [1, 12], "generic_t": [1, 12], "get": [1, 2, 4, 9, 12], "item": [1, 2, 3, 12], "kei": [1, 2, 3, 6, 12], "size": [1, 12], "subset": [1, 12], "updat": [1, 2, 3, 12], "valu": [1, 2, 3, 4, 6, 9, 12, 13], "translat": [0, 1, 2, 14], "cc_tran": [0, 1, 14], "cctranslat": [1, 13], "module_factory_func_nam": [1, 13], "evaluatedexpr": [1, 13], "is_nam": [1, 13], "token": [1, 13], "typ": [1, 2, 12, 13], "v": [1, 2, 11, 13], "funcsignatur": [1, 13], "arg": [1, 2, 3, 9, 10, 13], "result_vari": [1, 13], "return_typ": [1, 13], "update_context": [1, 13], "valuetyp": [1, 2, 12, 13], "value_type_bool": [1, 13], "value_type_cmt_ptr": [1, 13], "value_type_cmt_sys_ref": [1, 13], "value_type_cube_ref": [1, 13], "value_type_dosing_param": [1, 13], "value_type_dosing_param_const_ref": [1, 13], "value_type_doubl": [1, 13], "value_type_double_context": [1, 13], "value_type_double_context_ref": [1, 13], "value_type_int": [1, 13], "value_type_long": [1, 13], "value_type_mat": [1, 13], "value_type_mat_const_ref": [1, 13], "value_type_mat_ref": [1, 13], "value_type_pk_param": [1, 13], "value_type_pk_param_const_ref": [1, 13], "value_type_str": [1, 13], "value_type_string_context": [1, 13], "value_type_string_context_ref": [1, 13], "value_type_subroutin": [1, 13], "value_type_subroutine_ref": [1, 13], "value_type_vec": [1, 13], "value_type_vec_const_ref": [1, 13], "value_type_vec_ref": [1, 13], "value_type_void": [1, 13], "can_be_eq_to": [1, 13], "from_dtyp": [1, 13], "from_val": [1, 13], "is_numer": [1, 13], "to_cc_typ": [1, 13], "sympy_ast_tran": [0, 1, 14], "astsympytransl": [1, 13], "bootstrapresult": [2, 4], "df": [2, 4], "level": [2, 4], "show_level": [2, 4], "vpcresult": [2, 4], "ci_df": [2, 4], "show_bin": [2, 4], "simulate_df": [2, 4], "compute_wres_list": [2, 4], "compute_wres_seri": [2, 4], "reorder_matrix": [2, 5], "reorganize_omega": [2, 5], "reorganize_sigma": [2, 5], "reorganize_theta": [2, 5], "simulationresult": [2, 4, 5], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "union": [2, 3, 5, 12], "interpretedmodul": [2, 4, 5], "refinedmodul": 2, "translatedmodul": 2, "callabl": [2, 10], "ma": [2, 3, 4, 5, 6, 12, 13], "lib": [2, 3, 4, 5, 6, 12, 13], "_interpret": 2, "_refin": 2, "_translat": 2, "option": [2, 3, 4, 5, 6, 8, 11, 12, 13], "datafram": [2, 3, 4, 5, 11], "none": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "object": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13], "pop_param": 2, "mc_set": 2, "dittomcset": 2, "n_chain": [2, 4], "int": [2, 3, 4, 5, 6, 10, 11, 12, 13], "2": [2, 3, 4, 6, 9, 12], "n_burnin": [2, 4], "5": [2, 4, 11], "1000": 2, "alpha": [2, 4], "float": [2, 3, 4, 5, 10, 11, 12], "1": [2, 3, 4, 6, 9, 11, 12], "0": [2, 3, 4, 6, 9, 10, 11, 12], "seed": [2, 4, 5], "46": [2, 4], "dittoconditionaldistributionresult": 2, "properti": [2, 3, 4, 5, 6, 9, 11, 12], "_data": 2, "list": [2, 3, 4, 5, 6, 7, 11, 12, 13], "numpi": [2, 3, 4, 11, 12], "ndarrai": [2, 3, 4, 5, 11, 12], "ani": [2, 3, 4, 5, 6, 7, 10, 11, 12, 13], "dtype": [2, 3, 4, 5, 11, 12, 13], "float64": [2, 3, 4, 5, 11, 12], "laplacianlikealgorithmset": [2, 4], "saemestimationset": [2, 4], "sequenc": 2, "conditional_mean": 2, "conditional_vari": 2, "2000": [2, 4], "degree_of_freedom": 2, "dittoimportancesamplingresult": 2, "dittopopmodel": [2, 4, 5], "dict": [2, 3, 4, 5, 6, 7, 11, 12, 13], "str": [2, 3, 4, 5, 6, 7, 8, 11, 12, 13], "_theta": [2, 5, 13], "_omega": [2, 5, 12, 13], "eta": [2, 5, 12, 13], "_sigma": [2, 5, 12, 13], "ep": [2, 5, 12, 13], "path": [2, 8], "iipythondisplay": [2, 4], "pathlib": [2, 8], "ignor": [2, 3], "encod": 2, "utf": 2, "8": [2, 9, 11], "read": 2, "nonmem": 2, "line": 2, "start": [2, 3], "specif": 2, "charact": 2, "default": [2, 3, 4, 5, 12], "specifi": [2, 3], "file": 2, "return": [2, 3, 4, 5, 6, 9, 11, 12], "pd": [2, 3, 5], "id_col": 2, "id": [2, 3], "idv_col": 2, "time": [2, 3, 4], "dv_col": 2, "dv": [2, 3, 4, 11], "amt_col": 2, "amt": [2, 3], "cmt_col": 2, "evid_col": 2, "evid": [2, 3], "ii_col": 2, "ii": [2, 3], "addl_col": 2, "addl": [2, 3], "rate_col": 2, "rate": [2, 3, 4], "dur_col": 2, "dur": [2, 3], "tupl": [2, 3, 4, 7, 9, 11, 12], "ctl_path": 2, "control": 2, "ctl_source_or_path": 2, "work": [2, 4], "directori": 2, "dittopopparam": 2, "format": 2, "liter": [2, 3, 4, 5, 6, 11, 12, 13], "fals": [2, 3, 4, 11, 12, 13], "true": [2, 3, 4, 6, 9, 11], "classmethod": [2, 9, 13], "ditto_pop_param": 2, "kwarg": [2, 3, 10], "k": 2, "sympi": [2, 9, 10, 13], "core": [2, 10], "expr": [2, 9, 10, 12, 13], "ka": 2, "alag1": 2, "alag2": 2, "s1": 2, "s2": 2, "f1": 2, "f2": 2, "r1": 2, "r2": 2, "d1": 2, "d2": 2, "pkanalyticalsolut": [2, 6, 13], "depot": [2, 12], "central": [2, 12], "advan": [2, 6, 13], "tran": 2, "cl": [2, 9], "4": [2, 3, 4, 9, 11], "k23": 2, "k32": 2, "k24": 2, "k42": 2, "alag3": 2, "alag4": 2, "s3": 2, "s4": 2, "f3": 2, "f4": 2, "r3": 2, "r4": 2, "d3": 2, "d4": 2, "3": [2, 3, 4, 9, 11], "periph1": 2, "periph2": 2, "12": 2, "q3": 2, "q4": 2, "v2": 2, "v3": 2, "v4": 2, "beta": 2, "gamma": 2, "periph": 2, "q": 2, "vss": 2, "aob": 2, "6": [2, 4, 11], "km": 2, "vm": 2, "10": [2, 3, 4], "k12": 2, "k21": 2, "k13": 2, "k31": 2, "11": [2, 11], "q2": 2, "v1": 2, "titl": [2, 4, 11], "subject_id_nam": [2, 4, 11], "meta": [2, 4, 11], "idv_column": [2, 4, 11], "dv_column": [2, 4, 11], "wres_column": [2, 11], "iwres_column": [2, 11], "label_idv": [2, 4, 11], "label_wr": [2, 4, 11], "label_iwr": [2, 4, 11], "pred_column": [2, 4, 11], "ipred_column": [2, 4, 11], "label_dv": [2, 4, 11], "label_pr": [2, 4, 11], "label_ipr": [2, 4, 11], "outlier": [2, 4, 11], "is_plot_subgraph": [2, 4, 11], "bool": [2, 3, 4, 6, 11, 12, 13], "selftyp": [2, 3, 11], "abc": [2, 9, 11], "sub_row": [2, 11], "sub_col": [2, 11], "se_opt": [2, 4], "": [2, 3, 4, 9], "r": [2, 4], "linear": [2, 3, 4, 5, 11], "sa": [2, 4], "saem_se_set": [2, 4], "dittosaseset": [2, 4], "ditto": [2, 4], "build": [2, 3, 4], "_ditto": [2, 4], "nonlinear": [2, 4], "dittoestimationiterationresult": [2, 4], "good": [2, 4], "wres_opt": [2, 4], "cwre": [2, 4], "cwresi": [2, 4], "iwres_opt": [2, 4], "iwr": [2, 4], "ciwr": [2, 4], "ciwresi": [2, 4], "individu": [2, 4, 5], "row": [2, 4], "col": [2, 4], "y_axi": [2, 5], "_y_": [2, 5], "x_scale": [2, 3, 5, 11], "y_scale": [2, 3, 5, 11], "seri": [2, 3, 4, 5, 9], "lower": [2, 12], "triangular": [2, 12], "matrix": [2, 5, 12], "make": [2, 3, 12], "full": [2, 12], "symmetr": [2, 12], "ditto_est_result": [2, 4], "dittoestimationresult": [2, 4], "timedelta": [2, 4, 5], "If": [2, 3, 4, 6, 7, 12], "i": [2, 3, 4, 9, 12], "total": [2, 4], "elaps": [2, 4], "empir": [2, 4], "bayesian": [2, 4], "eta_hat": [2, 4], "final": [2, 4, 13], "popul": [2, 4], "iter": [2, 3, 4], "detail": [2, 4], "number": [2, 3, 4, 9], "previou": [2, 4], "result": [2, 4, 5], "print": [2, 4], "print_typ": [2, 4], "progress": [2, 4], "log_level": [2, 4], "trace": [2, 4], "maxit": [2, 4], "xtol": [2, 4], "1e": [2, 4], "06": [2, 4], "ftol": [2, 4], "minimize_method": [2, 4], "nm": [2, 4], "powel": [2, 4], "bobyqa": [2, 4], "lbfg": [2, 4], "lbfgs_b": [2, 4], "first": [2, 4, 9], "order": [2, 4, 11], "everi": [2, 4], "note": [2, 3, 4], "thi": [2, 3, 4, 9], "onli": [2, 3, 4], "when": [2, 3, 4, 9], "x": [2, 3, 4, 5, 9, 11], "f": [2, 4], "bar": [2, 4], "like": [2, 4], "visual": [2, 4], "noth": [2, 4], "max": [2, 4], "toler": [2, 4], "minim": [2, 4], "method": [2, 4, 9], "optim": [2, 4], "choic": [2, 4], "condit": [2, 4, 7], "interact": [2, 4], "dittoestim": [2, 4], "est_result": [2, 4], "fit_arg": [2, 4], "_pred_": [2, 4], "_ipred_": [2, 4], "The": [2, 3, 4, 9, 11], "which": [2, 3, 4, 9], "Of": [2, 4], "idv": [2, 3, 4], "us": [2, 3, 4, 5, 9, 11], "you": [2, 4], "do": [2, 3, 4], "defin": [2, 4], "wa": [2, 4], "built": [2, 4], "predict": [2, 4], "weight": [2, 4], "residu": [2, 4], "plote": [2, 4], "can": [2, 3, 4], "theindividu": [2, 4], "text": [2, 4], "label": [2, 4], "horizont": [2, 4], "axi": [2, 3, 4, 5, 9], "correspond": [2, 4], "independ": [2, 4], "variabl": [2, 4, 12], "depend": [2, 4], "vertic": [2, 4], "same": [2, 4, 11], "rang": [2, 4], "graph": [2, 4, 11], "displai": [2, 4], "legend": [2, 4], "subgraph": [2, 4], "automat": [2, 4], "calcul": [2, 3, 4, 9], "standard": [2, 3, 4], "logging_logg": 2, "logger": [2, 8], "dispos": 2, "ilogg": [2, 8], "alia": [2, 9], "handler": 2, "idispos": 2, "\u6dfb\u52a0\u65e5\u5fd7\u5904\u7406\u8005": 2, "\u8fd4\u56de\u5220\u9664\u8be5\u5904\u7406\u8005\u7684\u56de\u8c03": 2, "msg": 2, "exc_info": 2, "baseexcept": 2, "\u540d\u79f0": 2, "masdatafram": [2, 3, 5], "other": [2, 3, 9, 13], "concat": [2, 3], "oper": [2, 3], "covar": [2, 3], "add": [2, 3], "covari": [2, 3], "subject": [2, 3], "int64": [2, 3], "maspi": [2, 3], "unit": [2, 3], "basic_unit": [2, 3], "ss": [2, 3], "amt_unit": [2, 3], "time_unit": [2, 3], "str_": [2, 3], "amount": [2, 3, 12], "addit": [2, 3], "inter": [2, 3], "interv": [2, 3, 4, 5], "after": [2, 3], "one": [2, 3], "until": [2, 3], "an": [2, 3, 12, 13], "integ": [2, 3], "posit": [2, 3], "infus": [2, 3], "otherwis": [2, 3], "descript": [2, 3], "No": [2, 3], "record": [2, 3], "durat": [2, 3], "ar": [2, 3, 9], "from": [2, 3, 9], "two": [2, 3], "instead": [2, 3], "bioavail": [2, 3], "chang": [2, 3], "increas": [2, 3], "steadi": [2, 3], "state": [2, 3], "flag": [2, 3], "It": [2, 3], "between": [2, 3, 4], "superposit": [2, 3], "A": [2, 3, 11, 13], "vector": [2, 3], "string": [2, 3, 13], "observ": [2, 3, 12], "deep": [2, 3, 9], "indic": [2, 3], "new": [2, 3], "creat": [2, 3, 12], "call": [2, 3, 6, 9], "modif": [2, 3], "reflect": [2, 3], "origin": [2, 3], "see": [2, 3], "below": [2, 3], "without": [2, 3], "refer": [2, 3], "shallow": [2, 3], "vice": [2, 3], "versa": [2, 3], "includ": [2, 3, 4], "With": [2, 3], "neither": [2, 3], "nor": [2, 3], "match": [2, 3], "caller": [2, 3], "actual": [2, 3], "python": [2, 3, 13], "recurs": [2, 3], "contrast": [2, 3], "deepcopi": [2, 3], "librari": [2, 3], "while": [2, 3], "underli": [2, 3], "arrai": [2, 3], "perform": [2, 3], "reason": [2, 3], "sinc": [2, 3], "immut": [2, 3], "safe": [2, 3], "share": [2, 3], "need": [2, 3], "panda": [2, 3], "thread": [2, 3], "gotcha": [2, 3], "environ": [2, 3], "b": [2, 3, 9, 13], "s_copi": [2, 3], "versu": [2, 3], "ha": [2, 3, 9], "own": [2, 3], "both": [2, 3], "remain": [2, 3], "unchang": [2, 3], "contain": [2, 3], "so": [2, 3], "nest": [2, 3, 7], "dvid_nam": [2, 3, 11], "x_dvid": [2, 3, 11], "y_dvid": [2, 3, 11], "bivari": [2, 3], "dvid": [2, 3], "scale": [2, 3, 5], "rais": [2, 3, 5], "valueerror": [2, 3, 5], "_description_": [2, 3], "contour": [2, 3], "ignore_column": [2, 3], "reserv": [2, 3], "set": [2, 4, 5, 6, 7, 12], "n_mode1": [2, 4], "n_mode2": [2, 4], "n_mode3": [2, 4], "n_mode4": [2, 4], "kappa_min": [2, 4], "01": [2, 4], "kappa_max": [2, 4], "100": [2, 4], "negative_feedback": [2, 4], "optimal_accept": [2, 4], "n_stochast": [2, 4], "200": [2, 4], "n_accumul": [2, 4], "sa_omega": [2, 4], "95": [2, 4, 11], "sa_sigma": [2, 4], "7": [2, 4, 11], "is_auto_converg": [2, 4], "stochast": [2, 4], "approxim": [2, 4], "expect": [2, 4], "maximum": [2, 4], "random": [2, 4], "gener": [2, 4, 12], "burnin": [2, 4], "phase": [2, 4], "parallel": [2, 4], "markov": [2, 4], "chain": [2, 4], "mode1": [2, 4], "mc": [2, 4], "mode2": [2, 4], "mode3": [2, 4], "mode4": [2, 4], "minimum": [2, 4], "adjust": [2, 4], "factor": [2, 4], "neg": [2, 4, 9], "feedback": [2, 4], "accept": [2, 4], "accumul": [2, 4], "decreas": [2, 4], "anneal": [2, 4], "learn": [2, 4], "whether": [2, 4], "auto": [2, 4], "criteri": [2, 4], "col_nam": [2, 12], "continu": [2, 12], "categor": [2, 12], "_column": [2, 12], "columnindex": [2, 12, 13], "init_valu": [2, 12], "default_dos": [2, 12], "default_ob": [2, 12], "initi": [2, 12], "event": [2, 3], "tabl": [2, 3], "assum": [2, 3], "non": [2, 3], "reset": [2, 3], "expbas": [2, 9], "exponenti": [2, 9], "e": [2, 9], "import": [2, 9], "pi": [2, 9], "diff": [2, 9], "hint": [2, 9], "repres": [2, 9], "complex": [2, 9], "re": [2, 9], "co": [2, 9], "im": [2, 9], "sin": [2, 9], "elementari": [2, 9], "canon": [2, 9], "form": [2, 9], "appli": [2, 9], "argument": [2, 9], "about": [2, 9], "instanti": [2, 9], "should": [2, 9, 11, 12], "either": [2, 9], "some": [2, 9], "simplifi": [2, 6, 9], "instanc": [2, 9], "possibl": [2, 9], "unmodifi": [2, 9], "def": [2, 9], "nan": [2, 9], "is_zero": [2, 9], "zero": [2, 9], "is_posit": [2, 9], "One": [2, 9], "is_neg": [2, 9], "negativeon": [2, 9], "isinst": [2, 9], "mul": [2, 9], "coeff": [2, 9], "term": [2, 9], "as_coeff_mul": [2, 9], "ration": [2, 9], "argindex": [2, 9], "deriv": [2, 9], "static": [2, 9], "n": [2, 9, 11], "previous_term": [2, 9], "next": [2, 9], "taylor": [2, 9], "expans": [2, 9], "pred_cal": [2, 10], "modulet": [2, 10], "natur": [2, 9], "logarithm": [2, 9], "taken": [2, 9], "To": [2, 9], "differ": [2, 9], "essenti": [2, 9], "short": [2, 9], "hand": [2, 9], "princip": [2, 9], "branch": [2, 9], "As": [2, 9], "cut": [2, 9], "along": [2, 9], "real": [2, 9], "have": [2, 9], "sqrt": [2, 9], "expon": [2, 9], "coordin": [2, 9], "ab": [2, 9], "ref": [2, 12], "init_omega": [2, 12], "fix": [2, 12], "init_sigma": [2, 12], "bound": [2, 12], "construct": [2, 12], "boundstyp": [2, 12], "boundari": [2, 12], "1e8": [2, 12], "exampl": [3, 12], "bootstrap_result_list": 4, "ci_rang": 4, "bootstrap_df": 4, "run": 4, "auto_bin": 4, "min_point": 4, "idv_group": 4, "min_points_in_each_bin": 4, "check": 4, "confid": 4, "bin": 4, "regardless": 4, "accord": 4, "min": 4, "point": 4, "each": 4, "dittoestimationmethod": 4, "prev_param_nam": 5, "reordered_param_nam": 5, "simulation_column": 5, "__y__": 5, "_summary_": 5, "1234": 5, "ifelseconditionhoisttransform": [6, 7], "cond_mask": [6, 7], "ifelsevariablehoisttransform": [6, 7], "visitifresult": [6, 7], "hoisting_assign": [6, 7], "hoisting_mask_map": [6, 7], "if_nod": [6, 7], "ifelsevariableoverridetransform": [6, 7], "condition_branch_var_nam": [6, 7], "override_mask_map": [6, 7], "symvar": [6, 13], "_symvar": 6, "source_cod": [6, 7, 13], "mod_typ": 6, "od": [6, 13], "pred_vari": [6, 13], "2loglikelihood": [6, 13], "var_context": [6, 13], "cmt_context": [6, 13], "self_context": [6, 13], "local_context": [6, 7, 13], "global_context": [6, 7, 13], "nodetransform": [6, 7], "node": [6, 7], "functiondef": 6, "order_of_deriv": 6, "dadt_deriv": 6, "\u901a\u8fc7": 6, "ast": [6, 7, 13], "\u904d\u5386": 6, "\u7684\u8bed\u6cd5\u6811": 6, "\u4e3a": 6, "parsing_term_nam": 6, "\u4e2d\u7684\u6240\u6709\u53d8\u91cf\u6dfb\u52a0\u5bf9": 6, "\u4e2d\u7684\u53d8\u91cf\u7684\u504f\u5bfc": 6, "\u8bed\u6cd5\u6811": 6, "\u53d8\u91cf\u540d\u4e3a": 6, "\u5176\u5bf9\u5e94\u7684\u6240\u6709\u504f\u5bfc\u7684\u53d8\u91cf\u540d\u4e3a": 6, "\u7684\u5b57\u5178": 6, "assign": [6, 7], "attribut": 6, "\u5c06": [7, 13], "els": 7, "\u7684": 7, "\u8d4b\u503c\u4e3a\u53d8\u91cf": 7, "\u8fd9\u4e2a\u53ea\u80fd\u5904\u7406\u4e00\u5c42\u7684\u903b\u8f91": 7, "\u4e0d\u652f\u6301": 7, "__bool": 7, "\u7684\u53d8\u91cf\u63d0\u5347\u4ee5\u53ca\u5206\u652f\u548c\u7684\u8ba1\u7b97": 7, "cc_source_cod": 8, "src_include_dir": 8, "eigen_include_dir": 8, "temp_dir": 8, "uid": 8, "idv_nam": 11, "dv_name": 11, "classifications_vari": 11, "l": 11, "u": 11, "z": 11, "classification_var": 11, "fit_typ": 11, "lowess": 11, "h": 11, "c": [11, 13], "proport": 11, "rgba": 11, "122": 11, "111": 11, "99": 11, "77": 11, "55": 11, "44": 11, "05": 11, "15": 11, "25": 11, "35": 11, "45": 11, "65": 11, "75": 11, "85": 11, "d": 12, "t": 12, "_varcontext__nam": 12, "dict_item": 12, "dict_kei": 12, "keyset": 12, "o": 12, "dict_valu": 12, "cls_def": 13, "classdef": 13, "trans_funct": 13, "module_typ": 13, "epsilon": 13, "dat_context": 13, "\u7c7b\u5bf9\u8c61\u7ffb\u8bd1\u4e3a": 13, "\u6e90\u7801": 13, "__dylib_module_factori": 13, "\u4e3b\u5165\u53e3": 13, "\u7ffb\u8bd1": 13, "cc": 13, "syntax": 13, "enum": 13, "enumer": 13, "compartmentsystem": 13, "cubexd": 13, "dosingparamet": 13, "const": 13, "doubl": 13, "long": 13, "eigen": 13, "matrixxd": 13, "pkparamet": 13, "std": 13, "vectorxd": 13, "void": 13, "\u4e0e": 13, "\u4e0d\u540c": 13, "\u8fd9\u91cc\u4f1a\u5224\u65ad": 13, "\u548c": 13, "numer": 13, "\u7684\u903b\u8f91": 13, "val": 13, "\u8868\u8fbe\u5f0f\u5904\u7406\u4e3a": 13, "basic": 13, "captured_ctx": 13, "packag": [0, 14], "subpackag": [0, 14], "content": [0, 14]}, "objects": {"": [[1, 0, 0, "-", "masmod"]], "masmod": [[2, 0, 0, "-", "api"], [6, 0, 0, "-", "ast_worker"], [8, 0, 0, "-", "compiler"], [9, 0, 0, "-", "functional"], [10, 0, 0, "-", "module"], [11, 0, 0, "-", "plot"], [12, 0, 0, "-", "symbols"], [13, 0, 0, "-", "translator"]], "masmod.api": [[2, 1, 1, "", "Block"], [2, 1, 1, "", "EstimationResult"], [2, 1, 1, "", "EvOneCmtLinear"], [2, 1, 1, "", "EvThreeCmtLinear"], [2, 1, 1, "", "EvTwoCmtLinear"], [2, 5, 1, "", "FO"], [2, 5, 1, "", "FOCEi"], [2, 1, 1, "", "FitResult"], [2, 1, 1, "", "IPlotlyPlot"], [2, 1, 1, "", "IvOneCmtLinear"], [2, 1, 1, "", "IvOneCmtMichaelisMenten"], [2, 1, 1, "", "IvThreeCmtLinear"], [2, 1, 1, "", "IvTwoCmtLinear"], [2, 5, 1, "", "Laplace"], [2, 1, 1, "", "LoggingLogger"], [2, 1, 1, "", "ModelData"], [2, 1, 1, "", "Module"], [2, 1, 1, "", "ParameterSet"], [2, 1, 1, "", "PopModel"], [2, 1, 1, "", "PopParams"], [2, 5, 1, "", "SAEM"], [2, 5, 1, "", "column"], [2, 5, 1, "", "compartment"], [3, 0, 0, "-", "data"], [4, 0, 0, "-", "estimation"], [2, 5, 1, "", "et"], [2, 1, 1, "", "exp"], [2, 5, 1, "", "likelihood"], [2, 3, 1, "", "ln"], [2, 1, 1, "", "log"], [2, 0, 0, "-", "model"], [2, 5, 1, "", "mu"], [2, 5, 1, "", "neg2ll"], [2, 0, 0, "-", "nonmem_compat"], [2, 5, 1, "", "omega"], [2, 0, 0, "-", "parameters"], [2, 0, 0, "-", "pk"], [2, 0, 0, "-", "plot"], [2, 5, 1, "", "read_nonmem_data"], [2, 5, 1, "", "sigma"], [5, 0, 0, "-", "simulation"], [2, 5, 1, "", "split_nonmem_data"], [2, 5, 1, "", "theta"], [2, 0, 0, "-", "typing"]], "masmod.api.Block": [[2, 2, 1, "", "as_full"], [2, 3, 1, "", "dimension"], [2, 3, 1, "", "tril"]], "masmod.api.EstimationResult": [[2, 4, 1, "", "converged"], [2, 4, 1, "", "elapsed_time"], [2, 4, 1, "", "empirical_bayesian_estimation"], [2, 4, 1, "", "final_obj_val"], [2, 4, 1, "", "final_pop_params"], [2, 4, 1, "", "iter_details"], [2, 4, 1, "", "n_iter"], [2, 4, 1, "", "previous_est_result"], [2, 4, 1, "", "shrinkage"]], "masmod.api.EvOneCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans2"]], "masmod.api.EvOneCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvOneCmtLinear.trans2": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvThreeCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans6"]], "masmod.api.EvThreeCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvThreeCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvThreeCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvTwoCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans3"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans5"], [2, 1, 1, "", "trans6"]], "masmod.api.EvTwoCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvTwoCmtLinear.trans3": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvTwoCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvTwoCmtLinear.trans5": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.EvTwoCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.FitResult": [[2, 2, 1, "", "compute_se"], [2, 4, 1, "", "converged"], [2, 4, 1, "", "elapsed_time"], [2, 4, 1, "", "empirical_bayesian_estimation"], [2, 4, 1, "", "estimations"], [2, 4, 1, "", "final_obj_val"], [2, 4, 1, "", "final_pop_params"], [2, 4, 1, "", "ipred"], [2, 4, 1, "", "iter_details"], [2, 4, 1, "", "n_iter"], [2, 2, 1, "", "plot_goodness_of_fit"], [2, 2, 1, "", "plot_individual_fit"], [2, 2, 1, "", "plot_iteration_trace"], [2, 4, 1, "", "pred"], [2, 4, 1, "", "rse"], [2, 4, 1, "", "shrinkage"], [2, 2, 1, "", "simulate"]], "masmod.api.IPlotlyPlot": [[2, 4, 1, "", "figure"], [2, 2, 1, "", "show"]], "masmod.api.IvOneCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans2"]], "masmod.api.IvOneCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvOneCmtLinear.trans2": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvOneCmtMichaelisMenten": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"]], "masmod.api.IvOneCmtMichaelisMenten.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvThreeCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans6"]], "masmod.api.IvThreeCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvThreeCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvThreeCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvTwoCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans3"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans5"], [2, 1, 1, "", "trans6"]], "masmod.api.IvTwoCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvTwoCmtLinear.trans3": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvTwoCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvTwoCmtLinear.trans5": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.IvTwoCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.LoggingLogger": [[2, 3, 1, "", "ActionOnDisposed"], [2, 2, 1, "", "add_handler"], [2, 2, 1, "", "critical"], [2, 2, 1, "", "debug"], [2, 2, 1, "", "error"], [2, 2, 1, "", "info"], [2, 4, 1, "", "name"], [2, 2, 1, "", "warning"]], "masmod.api.ModelData": [[2, 2, 1, "", "__add__"], [2, 2, 1, "", "add_covariates"], [2, 2, 1, "", "add_dosing"], [2, 2, 1, "", "add_sampling"], [2, 2, 1, "", "copy"], [2, 4, 1, "", "dosing"], [2, 2, 1, "", "explore_bivariate_plot"], [2, 2, 1, "", "explore_contour_plot"], [2, 2, 1, "", "explore_covariates_plot"], [2, 4, 1, "", "nobs"], [2, 4, 1, "", "reserved_colnames"], [2, 4, 1, "", "sampling"]], "masmod.api.Module": [[2, 2, 1, "", "pred"]], "masmod.api.ParameterSet": [[2, 2, 1, "", "to_dict"]], "masmod.api.PopModel": [[2, 2, 1, "", "compute_ipred"], [2, 2, 1, "", "compute_pred"], [2, 2, 1, "", "conditional_distribution"], [2, 4, 1, "", "data"], [2, 2, 1, "", "empirical_bayesian_estimation"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "importance_sampling"], [2, 2, 1, "", "init_pop_params"], [2, 4, 1, "", "mod"], [2, 4, 1, "", "model_ptr"], [2, 2, 1, "", "simulate"]], "masmod.api.PopParams": [[2, 2, 1, "", "as_pandas"], [2, 2, 1, "", "as_tabular_data"], [2, 4, 1, "", "epsilon_names"], [2, 4, 1, "", "eta_names"], [2, 2, 1, "", "from_ditto"], [2, 4, 1, "", "theta_names"]], "masmod.api.data": [[3, 1, 1, "", "ModelData"], [3, 5, 1, "", "et"]], "masmod.api.data.ModelData": [[3, 2, 1, "", "__add__"], [3, 2, 1, "", "add_covariates"], [3, 2, 1, "", "add_dosing"], [3, 2, 1, "", "add_sampling"], [3, 2, 1, "", "copy"], [3, 4, 1, "", "dosing"], [3, 2, 1, "", "explore_bivariate_plot"], [3, 2, 1, "", "explore_contour_plot"], [3, 2, 1, "", "explore_covariates_plot"], [3, 4, 1, "", "nobs"], [3, 4, 1, "", "reserved_colnames"], [3, 4, 1, "", "sampling"]], "masmod.api.estimation": [[4, 1, 1, "", "EstimationResult"], [4, 5, 1, "", "FO"], [4, 5, 1, "", "FOCEi"], [4, 1, 1, "", "FitResult"], [4, 5, 1, "", "Laplace"], [4, 5, 1, "", "SAEM"], [4, 0, 0, "-", "bootstrap"], [4, 0, 0, "-", "estimation_method"], [4, 0, 0, "-", "estimation_result"], [4, 0, 0, "-", "fit_result"], [4, 0, 0, "-", "vpc"], [4, 0, 0, "-", "wres"]], "masmod.api.estimation.EstimationResult": [[4, 4, 1, "", "converged"], [4, 4, 1, "", "elapsed_time"], [4, 4, 1, "", "empirical_bayesian_estimation"], [4, 4, 1, "", "final_obj_val"], [4, 4, 1, "", "final_pop_params"], [4, 4, 1, "", "iter_details"], [4, 4, 1, "", "n_iter"], [4, 4, 1, "", "previous_est_result"], [4, 4, 1, "", "shrinkage"]], "masmod.api.estimation.FitResult": [[4, 2, 1, "", "compute_se"], [4, 4, 1, "", "converged"], [4, 4, 1, "", "elapsed_time"], [4, 4, 1, "", "empirical_bayesian_estimation"], [4, 4, 1, "", "estimations"], [4, 4, 1, "", "final_obj_val"], [4, 4, 1, "", "final_pop_params"], [4, 4, 1, "", "ipred"], [4, 4, 1, "", "iter_details"], [4, 4, 1, "", "n_iter"], [4, 2, 1, "", "plot_goodness_of_fit"], [4, 2, 1, "", "plot_individual_fit"], [4, 2, 1, "", "plot_iteration_trace"], [4, 4, 1, "", "pred"], [4, 4, 1, "", "rse"], [4, 4, 1, "", "shrinkage"], [4, 2, 1, "", "simulate"]], "masmod.api.estimation.bootstrap": [[4, 1, 1, "", "BootstrapResult"], [4, 5, 1, "", "bootstrap"]], "masmod.api.estimation.bootstrap.BootstrapResult": [[4, 4, 1, "", "df"], [4, 4, 1, "", "level"], [4, 2, 1, "", "show_level"]], "masmod.api.estimation.estimation_method": [[4, 5, 1, "", "FO"], [4, 5, 1, "", "FOCEi"], [4, 5, 1, "", "Laplace"], [4, 5, 1, "", "SAEM"]], "masmod.api.estimation.estimation_result": [[4, 1, 1, "", "EstimationResult"]], "masmod.api.estimation.estimation_result.EstimationResult": [[4, 4, 1, "", "converged"], [4, 4, 1, "", "elapsed_time"], [4, 4, 1, "", "empirical_bayesian_estimation"], [4, 4, 1, "", "final_obj_val"], [4, 4, 1, "", "final_pop_params"], [4, 4, 1, "", "iter_details"], [4, 4, 1, "", "n_iter"], [4, 4, 1, "", "previous_est_result"], [4, 4, 1, "", "shrinkage"]], "masmod.api.estimation.fit_result": [[4, 1, 1, "", "EstimationResult"]], "masmod.api.estimation.fit_result.EstimationResult": [[4, 4, 1, "", "converged"], [4, 4, 1, "", "elapsed_time"], [4, 4, 1, "", "empirical_bayesian_estimation"], [4, 4, 1, "", "final_obj_val"], [4, 4, 1, "", "final_pop_params"], [4, 4, 1, "", "iter_details"], [4, 4, 1, "", "n_iter"], [4, 4, 1, "", "previous_est_result"], [4, 4, 1, "", "shrinkage"]], "masmod.api.estimation.vpc": [[4, 1, 1, "", "VpcResult"], [4, 5, 1, "", "vpc"]], "masmod.api.estimation.vpc.VpcResult": [[4, 4, 1, "", "ci_df"], [4, 4, 1, "", "level"], [4, 2, 1, "", "show_bin"], [4, 2, 1, "", "show_level"], [4, 4, 1, "", "simulate_df"]], "masmod.api.estimation.wres": [[4, 1, 1, "", "Wres"]], "masmod.api.estimation.wres.Wres": [[4, 2, 1, "", "compute_wres_list"], [4, 2, 1, "", "compute_wres_series"]], "masmod.api.exp": [[2, 2, 1, "", "as_real_imag"], [2, 4, 1, "", "base"], [2, 3, 1, "", "default_assumptions"], [2, 2, 1, "", "eval"], [2, 2, 1, "", "fdiff"], [2, 2, 1, "", "taylor_term"]], "masmod.api.log": [[2, 2, 1, "", "as_base_exp"], [2, 2, 1, "", "as_real_imag"], [2, 3, 1, "", "default_assumptions"], [2, 2, 1, "", "eval"], [2, 2, 1, "", "fdiff"], [2, 2, 1, "", "inverse"], [2, 2, 1, "", "taylor_term"]], "masmod.api.model": [[2, 1, 1, "", "PopModel"]], "masmod.api.model.PopModel": [[2, 2, 1, "", "compute_ipred"], [2, 2, 1, "", "compute_pred"], [2, 2, 1, "", "conditional_distribution"], [2, 4, 1, "", "data"], [2, 2, 1, "", "empirical_bayesian_estimation"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "importance_sampling"], [2, 2, 1, "", "init_pop_params"], [2, 4, 1, "", "mod"], [2, 4, 1, "", "model_ptr"], [2, 2, 1, "", "simulate"]], "masmod.api.nonmem_compat": [[2, 1, 1, "", "TranslateResult"], [2, 5, 1, "", "read_nonmem_data"], [2, 5, 1, "", "split_nonmem_data"], [2, 5, 1, "", "translate_nonmem"]], "masmod.api.nonmem_compat.TranslateResult": [[2, 4, 1, "", "ctl_source"], [2, 4, 1, "", "mod_source"], [2, 4, 1, "", "work_dir"]], "masmod.api.parameters": [[2, 1, 1, "", "PopParams"]], "masmod.api.parameters.PopParams": [[2, 2, 1, "", "as_pandas"], [2, 2, 1, "", "as_tabular_data"], [2, 4, 1, "", "epsilon_names"], [2, 4, 1, "", "eta_names"], [2, 2, 1, "", "from_ditto"], [2, 4, 1, "", "theta_names"]], "masmod.api.pk": [[2, 1, 1, "", "EvOneCmtLinear"], [2, 1, 1, "", "EvThreeCmtLinear"], [2, 1, 1, "", "EvTwoCmtLinear"], [2, 1, 1, "", "IvOneCmtLinear"], [2, 1, 1, "", "IvOneCmtMichaelisMenten"], [2, 1, 1, "", "IvThreeCmtLinear"], [2, 1, 1, "", "IvTwoCmtLinear"]], "masmod.api.pk.EvOneCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans2"]], "masmod.api.pk.EvOneCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvOneCmtLinear.trans2": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvThreeCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans6"]], "masmod.api.pk.EvThreeCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvThreeCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvThreeCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvTwoCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans3"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans5"], [2, 1, 1, "", "trans6"]], "masmod.api.pk.EvTwoCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvTwoCmtLinear.trans3": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvTwoCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvTwoCmtLinear.trans5": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.EvTwoCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvOneCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans2"]], "masmod.api.pk.IvOneCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvOneCmtLinear.trans2": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvOneCmtMichaelisMenten": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"]], "masmod.api.pk.IvOneCmtMichaelisMenten.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvThreeCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans6"]], "masmod.api.pk.IvThreeCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvThreeCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvThreeCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvTwoCmtLinear": [[2, 3, 1, "", "index_dosing_cmt"], [2, 3, 1, "", "index_observe_cmt"], [2, 3, 1, "", "n_cmt"], [2, 1, 1, "", "trans1"], [2, 1, 1, "", "trans3"], [2, 1, 1, "", "trans4"], [2, 1, 1, "", "trans5"], [2, 1, 1, "", "trans6"]], "masmod.api.pk.IvTwoCmtLinear.trans1": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvTwoCmtLinear.trans3": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvTwoCmtLinear.trans4": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvTwoCmtLinear.trans5": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.pk.IvTwoCmtLinear.trans6": [[2, 3, 1, "", "advan"], [2, 3, 1, "", "trans"]], "masmod.api.plot": [[2, 1, 1, "", "GofPlot"], [2, 1, 1, "", "IGroupbyablePlotlyPlot"], [2, 1, 1, "", "IPlotlyPlot"], [2, 1, 1, "", "IndFitPlot"], [2, 1, 1, "", "IterPlot"]], "masmod.api.plot.IGroupbyablePlotlyPlot": [[2, 2, 1, "", "groupby"]], "masmod.api.plot.IPlotlyPlot": [[2, 4, 1, "", "figure"], [2, 2, 1, "", "show"]], "masmod.api.simulation": [[5, 1, 1, "", "SimulationResult"], [5, 0, 0, "-", "parameter_set"], [5, 0, 0, "-", "simulation"]], "masmod.api.simulation.SimulationResult": [[5, 2, 1, "", "plot_individual"], [5, 2, 1, "", "plot_interval"], [5, 4, 1, "", "simulated_df"], [5, 4, 1, "", "y"]], "masmod.api.simulation.parameter_set": [[5, 1, 1, "", "ParameterSet"], [5, 5, 1, "", "reorder_matrix"], [5, 5, 1, "", "reorganize_omega"], [5, 5, 1, "", "reorganize_sigma"], [5, 5, 1, "", "reorganize_theta"]], "masmod.api.simulation.parameter_set.ParameterSet": [[5, 2, 1, "", "to_dict"]], "masmod.api.simulation.simulation": [[5, 1, 1, "", "SimulationResult"], [5, 5, 1, "", "simulate"]], "masmod.api.simulation.simulation.SimulationResult": [[5, 2, 1, "", "plot_individual"], [5, 2, 1, "", "plot_interval"], [5, 4, 1, "", "simulated_df"], [5, 4, 1, "", "y"]], "masmod.api.typing": [[2, 1, 1, "", "IEstimationResult"], [2, 1, 1, "", "IPopModel"], [2, 1, 1, "", "ISimulationResult"]], "masmod.api.typing.IEstimationResult": [[2, 2, 1, "", "compute_se"], [2, 4, 1, "", "converged"], [2, 4, 1, "", "empirical_bayesian_estimation"], [2, 4, 1, "", "final_obj_val"], [2, 4, 1, "", "final_pop_params"], [2, 4, 1, "", "ipred"], [2, 4, 1, "", "iter_details"], [2, 4, 1, "", "n_iter"], [2, 2, 1, "", "plot_goodness_of_fit"], [2, 2, 1, "", "plot_individual_fit"], [2, 4, 1, "", "pred"], [2, 4, 1, "", "rse"], [2, 4, 1, "", "shrinkage"]], "masmod.api.typing.IPopModel": [[2, 2, 1, "", "compute_ipred"], [2, 2, 1, "", "compute_pred"], [2, 2, 1, "", "conditional_distribution"], [2, 4, 1, "", "data"], [2, 2, 1, "", "empirical_bayesian_estimation"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "importance_sampling"], [2, 2, 1, "", "init_pop_params"], [2, 4, 1, "", "mod"], [2, 4, 1, "", "model_ptr"], [2, 2, 1, "", "simulate"]], "masmod.api.typing.ISimulationResult": [[2, 2, 1, "", "plot_individual"], [2, 2, 1, "", "plot_interval"], [2, 4, 1, "", "simulated_df"], [2, 4, 1, "", "y"]], "masmod.ast_worker": [[6, 1, 1, "", "AutoDiffNodeTransformer"], [6, 1, 1, "", "FuncReturnVisitor"], [6, 1, 1, "", "IfElseTransformer"], [6, 1, 1, "", "IntegralTTransformer"], [6, 0, 0, "-", "autodiff"], [6, 0, 0, "-", "func_return"], [7, 0, 0, "-", "if_else"], [6, 0, 0, "-", "integral_t_transformer"]], "masmod.ast_worker.AutoDiffNodeTransformer": [[6, 2, 1, "", "insert_dosing_deriv_inline"], [6, 2, 1, "", "insert_param_deriv_inline"], [6, 2, 1, "", "insert_t0_update_inline"], [6, 4, 1, "", "subroutine"], [6, 2, 1, "", "visit_Assign"], [6, 2, 1, "", "visit_Attribute"], [6, 2, 1, "", "visit_Call"], [6, 2, 1, "", "visit_If"]], "masmod.ast_worker.FuncReturnVisitor": [[6, 4, 1, "", "func_def"], [6, 4, 1, "", "return_expr"], [6, 2, 1, "", "visit_FunctionDef"], [6, 2, 1, "", "visit_Return"]], "masmod.ast_worker.IfElseTransformer": [[6, 2, 1, "", "visit"]], "masmod.ast_worker.IntegralTTransformer": [[6, 2, 1, "", "visit_Name"]], "masmod.ast_worker.autodiff": [[6, 1, 1, "", "AutoDiffDADtWrt"], [6, 1, 1, "", "AutoDiffNodeTransformer"], [6, 1, 1, "", "AutoDiffTargetWrt"]], "masmod.ast_worker.autodiff.AutoDiffDADtWrt": [[6, 3, 1, "", "cmt"], [6, 3, 1, "", "wrt"], [6, 3, 1, "", "wrt2nd"]], "masmod.ast_worker.autodiff.AutoDiffNodeTransformer": [[6, 2, 1, "", "insert_dosing_deriv_inline"], [6, 2, 1, "", "insert_param_deriv_inline"], [6, 2, 1, "", "insert_t0_update_inline"], [6, 4, 1, "", "subroutine"], [6, 2, 1, "", "visit_Assign"], [6, 2, 1, "", "visit_Attribute"], [6, 2, 1, "", "visit_Call"], [6, 2, 1, "", "visit_If"]], "masmod.ast_worker.autodiff.AutoDiffTargetWrt": [[6, 3, 1, "", "target_name"], [6, 3, 1, "", "wrt"], [6, 3, 1, "", "wrt2nd"]], "masmod.ast_worker.func_return": [[6, 1, 1, "", "FuncReturnVisitor"]], "masmod.ast_worker.func_return.FuncReturnVisitor": [[6, 4, 1, "", "func_def"], [6, 4, 1, "", "return_expr"], [6, 2, 1, "", "visit_FunctionDef"], [6, 2, 1, "", "visit_Return"]], "masmod.ast_worker.if_else": [[7, 1, 1, "", "IfElseTransformer"], [7, 0, 0, "-", "condition_hoist"], [7, 0, 0, "-", "if_else"], [7, 0, 0, "-", "variable_hoist"], [7, 0, 0, "-", "variable_override"]], "masmod.ast_worker.if_else.IfElseTransformer": [[7, 2, 1, "", "visit"]], "masmod.ast_worker.if_else.condition_hoist": [[7, 1, 1, "", "IfElseConditionHoistTransformer"]], "masmod.ast_worker.if_else.condition_hoist.IfElseConditionHoistTransformer": [[7, 3, 1, "", "COND_MASKING"], [7, 2, 1, "", "visit_Assign"], [7, 2, 1, "", "visit_If"]], "masmod.ast_worker.if_else.if_else": [[7, 1, 1, "", "IfElseTransformer"]], "masmod.ast_worker.if_else.if_else.IfElseTransformer": [[7, 2, 1, "", "visit"]], "masmod.ast_worker.if_else.variable_hoist": [[7, 1, 1, "", "IfElseVariableHoistTransformer"], [7, 1, 1, "", "VisitIfResult"]], "masmod.ast_worker.if_else.variable_hoist.IfElseVariableHoistTransformer": [[7, 2, 1, "", "visit_Assign"], [7, 2, 1, "", "visit_If"]], "masmod.ast_worker.if_else.variable_hoist.VisitIfResult": [[7, 3, 1, "", "hoisting_assignments"], [7, 3, 1, "", "hoisting_mask_mapping"], [7, 3, 1, "", "if_node"]], "masmod.ast_worker.if_else.variable_override": [[7, 1, 1, "", "IfElseVariableOverrideTransformer"], [7, 1, 1, "", "VisitIfResult"]], "masmod.ast_worker.if_else.variable_override.IfElseVariableOverrideTransformer": [[7, 2, 1, "", "visit_Assign"], [7, 2, 1, "", "visit_If"]], "masmod.ast_worker.if_else.variable_override.VisitIfResult": [[7, 3, 1, "", "condition_branch_var_names"], [7, 3, 1, "", "hoisting_assignments"], [7, 3, 1, "", "if_node"], [7, 3, 1, "", "override_mask_mapping"]], "masmod.ast_worker.integral_t_transformer": [[6, 1, 1, "", "IntegralTTransformer"]], "masmod.ast_worker.integral_t_transformer.IntegralTTransformer": [[6, 2, 1, "", "visit_Name"]], "masmod.compiler": [[8, 1, 1, "", "CCCompiler"], [8, 0, 0, "-", "cc_compile"]], "masmod.compiler.CCCompiler": [[8, 2, 1, "", "compile"]], "masmod.compiler.cc_compile": [[8, 1, 1, "", "CCCompiler"], [8, 1, 1, "", "CompileResult"]], "masmod.compiler.cc_compile.CCCompiler": [[8, 2, 1, "", "compile"]], "masmod.compiler.cc_compile.CompileResult": [[8, 3, 1, "", "target_file"]], "masmod.functional": [[9, 1, 1, "", "exp"], [9, 3, 1, "", "ln"], [9, 1, 1, "", "log"]], "masmod.functional.exp": [[9, 2, 1, "", "as_real_imag"], [9, 4, 1, "", "base"], [9, 3, 1, "", "default_assumptions"], [9, 2, 1, "", "eval"], [9, 2, 1, "", "fdiff"], [9, 2, 1, "", "taylor_term"]], "masmod.functional.log": [[9, 2, 1, "", "as_base_exp"], [9, 2, 1, "", "as_real_imag"], [9, 3, 1, "", "default_assumptions"], [9, 2, 1, "", "eval"], [9, 2, 1, "", "fdiff"], [9, 2, 1, "", "inverse"], [9, 2, 1, "", "taylor_term"]], "masmod.module": [[10, 1, 1, "", "Module"], [10, 5, 1, "", "likelihood"], [10, 0, 0, "-", "module"], [10, 5, 1, "", "neg2ll"], [10, 0, 0, "-", "pk_module"]], "masmod.module.Module": [[10, 2, 1, "", "pred"]], "masmod.module.module": [[10, 1, 1, "", "Module"], [10, 5, 1, "", "likelihood"], [10, 5, 1, "", "neg2ll"]], "masmod.module.module.Module": [[10, 2, 1, "", "pred"]], "masmod.module.pk_module": [[10, 1, 1, "", "PKModule"]], "masmod.module.pk_module.PKModule": [[10, 3, 1, "", "index_dosing_cmt"], [10, 3, 1, "", "index_observe_cmt"], [10, 3, 1, "", "n_cmt"]], "masmod.plot": [[11, 0, 0, "-", "abstract"], [11, 0, 0, "-", "abstract_groupby"], [11, 0, 0, "-", "explore"], [11, 0, 0, "-", "gof_plot"], [11, 0, 0, "-", "ind_fit_plot"], [11, 0, 0, "-", "interface"], [11, 0, 0, "-", "iter_plot"], [11, 0, 0, "-", "simulate_plot"]], "masmod.plot.abstract": [[11, 1, 1, "", "AbstractPlotlyPlot"]], "masmod.plot.abstract.AbstractPlotlyPlot": [[11, 4, 1, "", "figure"], [11, 2, 1, "", "show"]], "masmod.plot.abstract_groupby": [[11, 1, 1, "", "AbstractGroupbyablePlotlyPlot"]], "masmod.plot.abstract_groupby.AbstractGroupbyablePlotlyPlot": [[11, 2, 1, "", "groupby"]], "masmod.plot.explore": [[11, 1, 1, "", "BivariatePlot"], [11, 1, 1, "", "ContourPlot"], [11, 1, 1, "", "CovariatesPlot"], [11, 5, 1, "", "LUV_to_XYZ"], [11, 5, 1, "", "XYZ_to_RGB"], [11, 5, 1, "", "eda_corr_plot_df"], [11, 5, 1, "", "get_color"], [11, 5, 1, "", "polarLUV_to_LUV"]], "masmod.plot.gof_plot": [[11, 1, 1, "", "GofPlot"], [11, 5, 1, "", "diagonal_range"], [11, 5, 1, "", "trend_line"]], "masmod.plot.ind_fit_plot": [[11, 1, 1, "", "IndFitPlot"]], "masmod.plot.interface": [[11, 1, 1, "", "IGroupbyablePlotlyPlot"], [11, 1, 1, "", "IPlotlyPlot"]], "masmod.plot.interface.IGroupbyablePlotlyPlot": [[11, 2, 1, "", "groupby"]], "masmod.plot.interface.IPlotlyPlot": [[11, 4, 1, "", "figure"], [11, 2, 1, "", "show"]], "masmod.plot.iter_plot": [[11, 1, 1, "", "IterPlot"]], "masmod.plot.simulate_plot": [[11, 1, 1, "", "SimulateIndividualPlot"], [11, 1, 1, "", "SimulateIntervalPlot"]], "masmod.plot.simulate_plot.SimulateIntervalPlot": [[11, 3, 1, "", "fill_colors"], [11, 3, 1, "", "percents"]], "masmod.symbols": [[12, 1, 1, "", "Block"], [12, 1, 1, "", "VarContext"], [12, 5, 1, "", "column"], [12, 5, 1, "", "compartment"], [12, 5, 1, "", "mu"], [12, 5, 1, "", "omega"], [12, 5, 1, "", "sigma"], [12, 5, 1, "", "theta"]], "masmod.symbols.Block": [[12, 2, 1, "", "as_full"], [12, 3, 1, "", "dimension"], [12, 3, 1, "", "tril"]], "masmod.symbols.VarContext": [[12, 2, 1, "", "as_dict"], [12, 2, 1, "", "copy"], [12, 4, 1, "", "generic_T"], [12, 2, 1, "", "get"], [12, 2, 1, "", "items"], [12, 2, 1, "", "keys"], [12, 2, 1, "", "size"], [12, 2, 1, "", "subset"], [12, 2, 1, "", "update"], [12, 2, 1, "", "values"]], "masmod.translator": [[13, 1, 1, "", "ASTSympyTranslator"], [13, 1, 1, "", "CCTranslator"], [13, 0, 0, "-", "cc_trans"], [13, 0, 0, "-", "sympy_ast_trans"]], "masmod.translator.ASTSympyTranslator": [[13, 2, 1, "", "translate"]], "masmod.translator.CCTranslator": [[13, 3, 1, "", "MODULE_FACTORY_FUNC_NAME"], [13, 2, 1, "", "translate"]], "masmod.translator.cc_trans": [[13, 1, 1, "", "CCTranslator"], [13, 1, 1, "", "EvaluatedExpr"], [13, 1, 1, "", "FuncSignature"], [13, 1, 1, "", "ValueType"]], "masmod.translator.cc_trans.CCTranslator": [[13, 3, 1, "", "MODULE_FACTORY_FUNC_NAME"], [13, 2, 1, "", "translate"]], "masmod.translator.cc_trans.EvaluatedExpr": [[13, 3, 1, "", "is_name"], [13, 3, 1, "", "token"], [13, 3, 1, "", "typ"], [13, 3, 1, "", "v"]], "masmod.translator.cc_trans.FuncSignature": [[13, 3, 1, "", "args"], [13, 3, 1, "", "result_variables"], [13, 3, 1, "", "return_type"], [13, 3, 1, "", "update_context"]], "masmod.translator.cc_trans.ValueType": [[13, 3, 1, "", "VALUE_TYPE_BOOL"], [13, 3, 1, "", "VALUE_TYPE_CMT_PTR"], [13, 3, 1, "", "VALUE_TYPE_CMT_SYS_REF"], [13, 3, 1, "", "VALUE_TYPE_CUBE_REF"], [13, 3, 1, "", "VALUE_TYPE_DOSING_PARAM"], [13, 3, 1, "", "VALUE_TYPE_DOSING_PARAM_CONST_REF"], [13, 3, 1, "", "VALUE_TYPE_DOUBLE"], [13, 3, 1, "", "VALUE_TYPE_DOUBLE_CONTEXT"], [13, 3, 1, "", "VALUE_TYPE_DOUBLE_CONTEXT_REF"], [13, 3, 1, "", "VALUE_TYPE_INT"], [13, 3, 1, "", "VALUE_TYPE_LONG"], [13, 3, 1, "", "VALUE_TYPE_MAT"], [13, 3, 1, "", "VALUE_TYPE_MAT_CONST_REF"], [13, 3, 1, "", "VALUE_TYPE_MAT_REF"], [13, 3, 1, "", "VALUE_TYPE_PK_PARAM"], [13, 3, 1, "", "VALUE_TYPE_PK_PARAM_CONST_REF"], [13, 3, 1, "", "VALUE_TYPE_STRING"], [13, 3, 1, "", "VALUE_TYPE_STRING_CONTEXT"], [13, 3, 1, "", "VALUE_TYPE_STRING_CONTEXT_REF"], [13, 3, 1, "", "VALUE_TYPE_SUBROUTINE"], [13, 3, 1, "", "VALUE_TYPE_SUBROUTINE_REF"], [13, 3, 1, "", "VALUE_TYPE_VEC"], [13, 3, 1, "", "VALUE_TYPE_VEC_CONST_REF"], [13, 3, 1, "", "VALUE_TYPE_VEC_REF"], [13, 3, 1, "", "VALUE_TYPE_VOID"], [13, 2, 1, "", "can_be_eq_to"], [13, 2, 1, "", "from_dtype"], [13, 2, 1, "", "from_val"], [13, 2, 1, "", "is_numeric"], [13, 2, 1, "", "to_cc_type"]], "masmod.translator.sympy_ast_trans": [[13, 1, 1, "", "ASTSympyTranslator"]], "masmod.translator.sympy_ast_trans.ASTSympyTranslator": [[13, 2, 1, "", "translate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": [], "masmod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "": [], "document": [], "indic": [], "tabl": [], "packag": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "subpackag": [1, 2, 6], "modul": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "content": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13], "api": [0, 2, 3, 4, 5], "submodul": [2, 4, 5, 6, 7, 8, 10, 11, 13], "model": 2, "nonmem_compat": 2, "paramet": 2, "pk": 2, "plot": [2, 11], "type": 2, "explan": [2, 9], "exampl": [2, 9], "eval": [2, 9], "function": [2, 9], "sign": [2, 9], "data": 3, "estim": 4, "bootstrap": 4, "estimation_method": 4, "estimation_result": 4, "fit_result": 4, "vpc": 4, "wre": 4, "simul": 5, "parameter_set": 5, "ast_work": [6, 7], "autodiff": 6, "func_return": 6, "integral_t_transform": 6, "if_els": 7, "condition_hoist": 7, "variable_hoist": 7, "variable_overrid": 7, "compil": 8, "cc_compil": 8, "pk_modul": 10, "abstract": 11, "abstract_groupbi": 11, "explor": 11, "gof_plot": 11, "ind_fit_plot": 11, "interfac": 11, "iter_plot": 11, "simulate_plot": 11, "symbol": 12, "translat": 13, "cc_tran": 13, "sympy_ast_tran": 13, "python": 0, "refer": 0}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"masmod package": [[1, "masmod-package"]], "Subpackages": [[1, "subpackages"], [2, "subpackages"], [6, "subpackages"]], "Module contents": [[1, "module-masmod"], [2, "module-masmod.api"], [3, "module-masmod.api.data"], [4, "module-masmod.api.estimation"], [5, "module-masmod.api.simulation"], [6, "module-masmod.ast_worker"], [7, "module-masmod.ast_worker.if_else"], [8, "module-masmod.compiler"], [9, "module-masmod.functional"], [10, "module-masmod.module"], [11, "module-masmod.plot"], [12, "module-masmod.symbols"], [13, "module-masmod.translator"]], "masmod.api package": [[2, "masmod-api-package"]], "Submodules": [[2, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [10, "submodules"], [11, "submodules"], [13, "submodules"]], "masmod.api.model module": [[2, "module-masmod.api.model"]], "masmod.api.nonmem_compat module": [[2, "module-masmod.api.nonmem_compat"]], "masmod.api.parameters module": [[2, "module-masmod.api.parameters"]], "masmod.api.pk module": [[2, "module-masmod.api.pk"]], "masmod.api.plot module": [[2, "module-masmod.api.plot"]], "masmod.api.typing module": [[2, "module-masmod.api.typing"]], "Explanation": [[2, "explanation"], [2, "id1"], [2, "id2"], [9, "explanation"], [9, "id1"], [9, "id2"]], "Examples of eval() for the function \u201csign\u201d": [[2, "examples-of-eval-for-the-function-sign"], [2, "id3"], [9, "examples-of-eval-for-the-function-sign"], [9, "id3"]], "masmod.api.data package": [[3, "masmod-api-data-package"]], "masmod.api.estimation package": [[4, "masmod-api-estimation-package"]], "masmod.api.estimation.bootstrap module": [[4, "module-masmod.api.estimation.bootstrap"]], "masmod.api.estimation.estimation_method module": [[4, "module-masmod.api.estimation.estimation_method"]], "masmod.api.estimation.estimation_result module": [[4, "module-masmod.api.estimation.estimation_result"]], "masmod.api.estimation.fit_result module": [[4, "module-masmod.api.estimation.fit_result"]], "masmod.api.estimation.vpc module": [[4, "module-masmod.api.estimation.vpc"]], "masmod.api.estimation.wres module": [[4, "module-masmod.api.estimation.wres"]], "masmod.api.simulation package": [[5, "masmod-api-simulation-package"]], "masmod.api.simulation.parameter_set module": [[5, "module-masmod.api.simulation.parameter_set"]], "masmod.api.simulation.simulation module": [[5, "module-masmod.api.simulation.simulation"]], "masmod.ast_worker package": [[6, "masmod-ast-worker-package"]], "masmod.ast_worker.autodiff module": [[6, "module-masmod.ast_worker.autodiff"]], "masmod.ast_worker.func_return module": [[6, "module-masmod.ast_worker.func_return"]], "masmod.ast_worker.integral_t_transformer module": [[6, "module-masmod.ast_worker.integral_t_transformer"]], "masmod.ast_worker.if_else package": [[7, "masmod-ast-worker-if-else-package"]], "masmod.ast_worker.if_else.condition_hoist module": [[7, "module-masmod.ast_worker.if_else.condition_hoist"]], "masmod.ast_worker.if_else.if_else module": [[7, "module-masmod.ast_worker.if_else.if_else"]], "masmod.ast_worker.if_else.variable_hoist module": [[7, "module-masmod.ast_worker.if_else.variable_hoist"]], "masmod.ast_worker.if_else.variable_override module": [[7, "module-masmod.ast_worker.if_else.variable_override"]], "masmod.compiler package": [[8, "masmod-compiler-package"]], "masmod.compiler.cc_compile module": [[8, "module-masmod.compiler.cc_compile"]], "masmod.functional package": [[9, "masmod-functional-package"]], "masmod.module package": [[10, "masmod-module-package"]], "masmod.module.module module": [[10, "module-masmod.module.module"]], "masmod.module.pk_module module": [[10, "module-masmod.module.pk_module"]], "masmod.plot package": [[11, "masmod-plot-package"]], "masmod.plot.abstract module": [[11, "module-masmod.plot.abstract"]], "masmod.plot.abstract_groupby module": [[11, "module-masmod.plot.abstract_groupby"]], "masmod.plot.explore module": [[11, "module-masmod.plot.explore"]], "masmod.plot.gof_plot module": [[11, "module-masmod.plot.gof_plot"]], "masmod.plot.ind_fit_plot module": [[11, "module-masmod.plot.ind_fit_plot"]], "masmod.plot.interface module": [[11, "module-masmod.plot.interface"]], "masmod.plot.iter_plot module": [[11, "module-masmod.plot.iter_plot"]], "masmod.plot.simulate_plot module": [[11, "module-masmod.plot.simulate_plot"]], "masmod.symbols package": [[12, "masmod-symbols-package"]], "masmod.translator package": [[13, "masmod-translator-package"]], "masmod.translator.cc_trans module": [[13, "module-masmod.translator.cc_trans"]], "masmod.translator.sympy_ast_trans module": [[13, "module-masmod.translator.sympy_ast_trans"]], "masmod": [[14, "masmod"]], "Masmod Python Api Reference": [[0, "masmod-python-api-reference"]]}, "indexentries": {"masmod": [[1, "module-masmod"]], "module": [[1, "module-masmod"], [2, "module-masmod.api"], [2, "module-masmod.api.model"], [2, "module-masmod.api.nonmem_compat"], [2, "module-masmod.api.parameters"], [2, "module-masmod.api.pk"], [2, "module-masmod.api.plot"], [2, "module-masmod.api.typing"], [3, "module-masmod.api.data"], [4, "module-masmod.api.estimation"], [4, "module-masmod.api.estimation.bootstrap"], [4, "module-masmod.api.estimation.estimation_method"], [4, "module-masmod.api.estimation.estimation_result"], [4, "module-masmod.api.estimation.fit_result"], [4, "module-masmod.api.estimation.vpc"], [4, "module-masmod.api.estimation.wres"], [5, "module-masmod.api.simulation"], [5, "module-masmod.api.simulation.parameter_set"], [5, "module-masmod.api.simulation.simulation"], [6, "module-masmod.ast_worker"], [6, "module-masmod.ast_worker.autodiff"], [6, "module-masmod.ast_worker.func_return"], [6, "module-masmod.ast_worker.integral_t_transformer"], [7, "module-masmod.ast_worker.if_else"], [7, "module-masmod.ast_worker.if_else.condition_hoist"], [7, "module-masmod.ast_worker.if_else.if_else"], [7, "module-masmod.ast_worker.if_else.variable_hoist"], [7, "module-masmod.ast_worker.if_else.variable_override"], [8, "module-masmod.compiler"], [8, "module-masmod.compiler.cc_compile"], [9, "module-masmod.functional"], [10, "module-masmod.module"], [10, "module-masmod.module.module"], [10, "module-masmod.module.pk_module"], [11, "module-masmod.plot"], [11, "module-masmod.plot.abstract"], [11, "module-masmod.plot.abstract_groupby"], [11, "module-masmod.plot.explore"], [11, "module-masmod.plot.gof_plot"], [11, "module-masmod.plot.ind_fit_plot"], [11, "module-masmod.plot.interface"], [11, "module-masmod.plot.iter_plot"], [11, "module-masmod.plot.simulate_plot"], [12, "module-masmod.symbols"], [13, "module-masmod.translator"], [13, "module-masmod.translator.cc_trans"], [13, "module-masmod.translator.sympy_ast_trans"]], "actionondisposed (masmod.api.logginglogger attribute)": [[2, "masmod.api.LoggingLogger.ActionOnDisposed"]], "block (class in masmod.api)": [[2, "masmod.api.Block"]], "estimationresult (class in masmod.api)": [[2, "masmod.api.EstimationResult"]], "evonecmtlinear (class in masmod.api)": [[2, "masmod.api.EvOneCmtLinear"]], "evonecmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.EvOneCmtLinear"]], "evonecmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.EvOneCmtLinear.trans1"]], "evonecmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvOneCmtLinear.trans1"]], "evonecmtlinear.trans2 (class in masmod.api)": [[2, "masmod.api.EvOneCmtLinear.trans2"]], "evonecmtlinear.trans2 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvOneCmtLinear.trans2"]], "evthreecmtlinear (class in masmod.api)": [[2, "masmod.api.EvThreeCmtLinear"]], "evthreecmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.EvThreeCmtLinear"]], "evthreecmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.EvThreeCmtLinear.trans1"]], "evthreecmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans1"]], "evthreecmtlinear.trans4 (class in masmod.api)": [[2, "masmod.api.EvThreeCmtLinear.trans4"]], "evthreecmtlinear.trans4 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans4"]], "evthreecmtlinear.trans6 (class in masmod.api)": [[2, "masmod.api.EvThreeCmtLinear.trans6"]], "evthreecmtlinear.trans6 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans6"]], "evtwocmtlinear (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear"]], "evtwocmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear"]], "evtwocmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear.trans1"]], "evtwocmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans1"]], "evtwocmtlinear.trans3 (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear.trans3"]], "evtwocmtlinear.trans3 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans3"]], "evtwocmtlinear.trans4 (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear.trans4"]], "evtwocmtlinear.trans4 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans4"]], "evtwocmtlinear.trans5 (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear.trans5"]], "evtwocmtlinear.trans5 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans5"]], "evtwocmtlinear.trans6 (class in masmod.api)": [[2, "masmod.api.EvTwoCmtLinear.trans6"]], "evtwocmtlinear.trans6 (class in masmod.api.pk)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans6"]], "fo() (in module masmod.api)": [[2, "masmod.api.FO"]], "focei() (in module masmod.api)": [[2, "masmod.api.FOCEi"]], "fitresult (class in masmod.api)": [[2, "masmod.api.FitResult"]], "gofplot (class in masmod.api.plot)": [[2, "masmod.api.plot.GofPlot"]], "iestimationresult (class in masmod.api.typing)": [[2, "masmod.api.typing.IEstimationResult"]], "igroupbyableplotlyplot (class in masmod.api.plot)": [[2, "masmod.api.plot.IGroupbyablePlotlyPlot"]], "iplotlyplot (class in masmod.api)": [[2, "masmod.api.IPlotlyPlot"]], "iplotlyplot (class in masmod.api.plot)": [[2, "masmod.api.plot.IPlotlyPlot"]], "ipopmodel (class in masmod.api.typing)": [[2, "masmod.api.typing.IPopModel"]], "isimulationresult (class in masmod.api.typing)": [[2, "masmod.api.typing.ISimulationResult"]], "indfitplot (class in masmod.api.plot)": [[2, "masmod.api.plot.IndFitPlot"]], "iterplot (class in masmod.api.plot)": [[2, "masmod.api.plot.IterPlot"]], "ivonecmtlinear (class in masmod.api)": [[2, "masmod.api.IvOneCmtLinear"]], "ivonecmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.IvOneCmtLinear"]], "ivonecmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.IvOneCmtLinear.trans1"]], "ivonecmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvOneCmtLinear.trans1"]], "ivonecmtlinear.trans2 (class in masmod.api)": [[2, "masmod.api.IvOneCmtLinear.trans2"]], "ivonecmtlinear.trans2 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvOneCmtLinear.trans2"]], "ivonecmtmichaelismenten (class in masmod.api)": [[2, "masmod.api.IvOneCmtMichaelisMenten"]], "ivonecmtmichaelismenten (class in masmod.api.pk)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten"]], "ivonecmtmichaelismenten.trans1 (class in masmod.api)": [[2, "masmod.api.IvOneCmtMichaelisMenten.trans1"]], "ivonecmtmichaelismenten.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.trans1"]], "ivthreecmtlinear (class in masmod.api)": [[2, "masmod.api.IvThreeCmtLinear"]], "ivthreecmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.IvThreeCmtLinear"]], "ivthreecmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.IvThreeCmtLinear.trans1"]], "ivthreecmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans1"]], "ivthreecmtlinear.trans4 (class in masmod.api)": [[2, "masmod.api.IvThreeCmtLinear.trans4"]], "ivthreecmtlinear.trans4 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans4"]], "ivthreecmtlinear.trans6 (class in masmod.api)": [[2, "masmod.api.IvThreeCmtLinear.trans6"]], "ivthreecmtlinear.trans6 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans6"]], "ivtwocmtlinear (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear"]], "ivtwocmtlinear (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear"]], "ivtwocmtlinear.trans1 (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear.trans1"]], "ivtwocmtlinear.trans1 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans1"]], "ivtwocmtlinear.trans3 (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear.trans3"]], "ivtwocmtlinear.trans3 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans3"]], "ivtwocmtlinear.trans4 (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear.trans4"]], "ivtwocmtlinear.trans4 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans4"]], "ivtwocmtlinear.trans5 (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear.trans5"]], "ivtwocmtlinear.trans5 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans5"]], "ivtwocmtlinear.trans6 (class in masmod.api)": [[2, "masmod.api.IvTwoCmtLinear.trans6"]], "ivtwocmtlinear.trans6 (class in masmod.api.pk)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans6"]], "laplace() (in module masmod.api)": [[2, "masmod.api.Laplace"]], "logginglogger (class in masmod.api)": [[2, "masmod.api.LoggingLogger"]], "modeldata (class in masmod.api)": [[2, "masmod.api.ModelData"]], "module (class in masmod.api)": [[2, "masmod.api.Module"]], "parameterset (class in masmod.api)": [[2, "masmod.api.ParameterSet"]], "popmodel (class in masmod.api)": [[2, "masmod.api.PopModel"]], "popmodel (class in masmod.api.model)": [[2, "masmod.api.model.PopModel"]], "popparams (class in masmod.api)": [[2, "masmod.api.PopParams"]], "popparams (class in masmod.api.parameters)": [[2, "masmod.api.parameters.PopParams"]], "saem() (in module masmod.api)": [[2, "masmod.api.SAEM"]], "translateresult (class in masmod.api.nonmem_compat)": [[2, "masmod.api.nonmem_compat.TranslateResult"]], "__add__() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.__add__"]], "add_covariates() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.add_covariates"]], "add_dosing() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.add_dosing"]], "add_handler() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.add_handler"]], "add_sampling() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.add_sampling"]], "advan (masmod.api.evonecmtlinear.trans1 attribute)": [[2, "masmod.api.EvOneCmtLinear.trans1.advan"]], "advan (masmod.api.evonecmtlinear.trans2 attribute)": [[2, "masmod.api.EvOneCmtLinear.trans2.advan"]], "advan (masmod.api.evthreecmtlinear.trans1 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans1.advan"]], "advan (masmod.api.evthreecmtlinear.trans4 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans4.advan"]], "advan (masmod.api.evthreecmtlinear.trans6 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans6.advan"]], "advan (masmod.api.evtwocmtlinear.trans1 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans1.advan"]], "advan (masmod.api.evtwocmtlinear.trans3 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans3.advan"]], "advan (masmod.api.evtwocmtlinear.trans4 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans4.advan"]], "advan (masmod.api.evtwocmtlinear.trans5 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans5.advan"]], "advan (masmod.api.evtwocmtlinear.trans6 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans6.advan"]], "advan (masmod.api.ivonecmtlinear.trans1 attribute)": [[2, "masmod.api.IvOneCmtLinear.trans1.advan"]], "advan (masmod.api.ivonecmtlinear.trans2 attribute)": [[2, "masmod.api.IvOneCmtLinear.trans2.advan"]], "advan (masmod.api.ivonecmtmichaelismenten.trans1 attribute)": [[2, "masmod.api.IvOneCmtMichaelisMenten.trans1.advan"]], "advan (masmod.api.ivthreecmtlinear.trans1 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans1.advan"]], "advan (masmod.api.ivthreecmtlinear.trans4 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans4.advan"]], "advan (masmod.api.ivthreecmtlinear.trans6 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans6.advan"]], "advan (masmod.api.ivtwocmtlinear.trans1 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans1.advan"]], "advan (masmod.api.ivtwocmtlinear.trans3 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans3.advan"]], "advan (masmod.api.ivtwocmtlinear.trans4 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans4.advan"]], "advan (masmod.api.ivtwocmtlinear.trans5 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans5.advan"]], "advan (masmod.api.ivtwocmtlinear.trans6 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans6.advan"]], "advan (masmod.api.pk.evonecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.trans1.advan"]], "advan (masmod.api.pk.evonecmtlinear.trans2 attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.trans2.advan"]], "advan (masmod.api.pk.evthreecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans1.advan"]], "advan (masmod.api.pk.evthreecmtlinear.trans4 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans4.advan"]], "advan (masmod.api.pk.evthreecmtlinear.trans6 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans6.advan"]], "advan (masmod.api.pk.evtwocmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans1.advan"]], "advan (masmod.api.pk.evtwocmtlinear.trans3 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans3.advan"]], "advan (masmod.api.pk.evtwocmtlinear.trans4 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans4.advan"]], "advan (masmod.api.pk.evtwocmtlinear.trans5 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans5.advan"]], "advan (masmod.api.pk.evtwocmtlinear.trans6 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans6.advan"]], "advan (masmod.api.pk.ivonecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.trans1.advan"]], "advan (masmod.api.pk.ivonecmtlinear.trans2 attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.trans2.advan"]], "advan (masmod.api.pk.ivonecmtmichaelismenten.trans1 attribute)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.trans1.advan"]], "advan (masmod.api.pk.ivthreecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans1.advan"]], "advan (masmod.api.pk.ivthreecmtlinear.trans4 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans4.advan"]], "advan (masmod.api.pk.ivthreecmtlinear.trans6 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans6.advan"]], "advan (masmod.api.pk.ivtwocmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans1.advan"]], "advan (masmod.api.pk.ivtwocmtlinear.trans3 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans3.advan"]], "advan (masmod.api.pk.ivtwocmtlinear.trans4 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans4.advan"]], "advan (masmod.api.pk.ivtwocmtlinear.trans5 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans5.advan"]], "advan (masmod.api.pk.ivtwocmtlinear.trans6 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans6.advan"]], "as_base_exp() (masmod.api.log method)": [[2, "masmod.api.log.as_base_exp"]], "as_full() (masmod.api.block method)": [[2, "masmod.api.Block.as_full"]], "as_pandas() (masmod.api.popparams method)": [[2, "masmod.api.PopParams.as_pandas"]], "as_pandas() (masmod.api.parameters.popparams method)": [[2, "masmod.api.parameters.PopParams.as_pandas"]], "as_real_imag() (masmod.api.exp method)": [[2, "masmod.api.exp.as_real_imag"]], "as_real_imag() (masmod.api.log method)": [[2, "masmod.api.log.as_real_imag"]], "as_tabular_data() (masmod.api.popparams method)": [[2, "masmod.api.PopParams.as_tabular_data"]], "as_tabular_data() (masmod.api.parameters.popparams method)": [[2, "masmod.api.parameters.PopParams.as_tabular_data"]], "base (masmod.api.exp property)": [[2, "masmod.api.exp.base"]], "column() (in module masmod.api)": [[2, "masmod.api.column"]], "compartment() (in module masmod.api)": [[2, "masmod.api.compartment"]], "compute_ipred() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.compute_ipred"]], "compute_ipred() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.compute_ipred"]], "compute_ipred() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.compute_ipred"]], "compute_pred() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.compute_pred"]], "compute_pred() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.compute_pred"]], "compute_pred() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.compute_pred"]], "compute_se() (masmod.api.fitresult method)": [[2, "masmod.api.FitResult.compute_se"]], "compute_se() (masmod.api.typing.iestimationresult method)": [[2, "masmod.api.typing.IEstimationResult.compute_se"]], "conditional_distribution() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.conditional_distribution"]], "conditional_distribution() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.conditional_distribution"]], "conditional_distribution() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.conditional_distribution"]], "converged (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.converged"]], "converged (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.converged"]], "converged (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.converged"]], "copy() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.copy"]], "critical() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.critical"]], "ctl_source (masmod.api.nonmem_compat.translateresult property)": [[2, "masmod.api.nonmem_compat.TranslateResult.ctl_source"]], "data (masmod.api.popmodel property)": [[2, "masmod.api.PopModel.data"]], "data (masmod.api.model.popmodel property)": [[2, "masmod.api.model.PopModel.data"]], "data (masmod.api.typing.ipopmodel property)": [[2, "masmod.api.typing.IPopModel.data"]], "debug() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.debug"]], "default_assumptions (masmod.api.exp attribute)": [[2, "masmod.api.exp.default_assumptions"]], "default_assumptions (masmod.api.log attribute)": [[2, "masmod.api.log.default_assumptions"]], "dimension (masmod.api.block attribute)": [[2, "masmod.api.Block.dimension"]], "dosing (masmod.api.modeldata property)": [[2, "masmod.api.ModelData.dosing"]], "elapsed_time (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.elapsed_time"]], "elapsed_time (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.elapsed_time"]], "empirical_bayesian_estimation (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.empirical_bayesian_estimation"]], "empirical_bayesian_estimation() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.empirical_bayesian_estimation"]], "empirical_bayesian_estimation() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.empirical_bayesian_estimation"]], "epsilon_names (masmod.api.popparams property)": [[2, "masmod.api.PopParams.epsilon_names"]], "epsilon_names (masmod.api.parameters.popparams property)": [[2, "masmod.api.parameters.PopParams.epsilon_names"]], "error() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.error"]], "estimations (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.estimations"]], "et() (in module masmod.api)": [[2, "masmod.api.et"]], "eta_names (masmod.api.popparams property)": [[2, "masmod.api.PopParams.eta_names"]], "eta_names (masmod.api.parameters.popparams property)": [[2, "masmod.api.parameters.PopParams.eta_names"]], "eval() (masmod.api.exp class method)": [[2, "masmod.api.exp.eval"]], "eval() (masmod.api.log class method)": [[2, "masmod.api.log.eval"]], "exp (class in masmod.api)": [[2, "masmod.api.exp"]], "explore_bivariate_plot() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.explore_bivariate_plot"]], "explore_contour_plot() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.explore_contour_plot"]], "explore_covariates_plot() (masmod.api.modeldata method)": [[2, "masmod.api.ModelData.explore_covariates_plot"]], "fdiff() (masmod.api.exp method)": [[2, "masmod.api.exp.fdiff"]], "fdiff() (masmod.api.log method)": [[2, "masmod.api.log.fdiff"]], "figure (masmod.api.iplotlyplot property)": [[2, "masmod.api.IPlotlyPlot.figure"]], "figure (masmod.api.plot.iplotlyplot property)": [[2, "masmod.api.plot.IPlotlyPlot.figure"]], "final_obj_val (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.final_obj_val"]], "final_obj_val (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.final_obj_val"]], "final_obj_val (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.final_obj_val"]], "final_pop_params (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.final_pop_params"]], "final_pop_params (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.final_pop_params"]], "final_pop_params (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.final_pop_params"]], "fit() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.fit"]], "fit() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.fit"]], "fit() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.fit"]], "from_ditto() (masmod.api.popparams class method)": [[2, "masmod.api.PopParams.from_ditto"]], "from_ditto() (masmod.api.parameters.popparams class method)": [[2, "masmod.api.parameters.PopParams.from_ditto"]], "groupby() (masmod.api.plot.igroupbyableplotlyplot method)": [[2, "masmod.api.plot.IGroupbyablePlotlyPlot.groupby"]], "importance_sampling() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.importance_sampling"]], "importance_sampling() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.importance_sampling"]], "importance_sampling() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.importance_sampling"]], "index_dosing_cmt (masmod.api.evonecmtlinear attribute)": [[2, "masmod.api.EvOneCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.evthreecmtlinear attribute)": [[2, "masmod.api.EvThreeCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.evtwocmtlinear attribute)": [[2, "masmod.api.EvTwoCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.ivonecmtlinear attribute)": [[2, "masmod.api.IvOneCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.IvOneCmtMichaelisMenten.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.ivthreecmtlinear attribute)": [[2, "masmod.api.IvThreeCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.ivtwocmtlinear attribute)": [[2, "masmod.api.IvTwoCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.evonecmtlinear attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.evthreecmtlinear attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.evtwocmtlinear attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.ivonecmtlinear attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.ivthreecmtlinear attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.index_dosing_cmt"]], "index_dosing_cmt (masmod.api.pk.ivtwocmtlinear attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.index_dosing_cmt"]], "index_observe_cmt (masmod.api.evonecmtlinear attribute)": [[2, "masmod.api.EvOneCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.evthreecmtlinear attribute)": [[2, "masmod.api.EvThreeCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.evtwocmtlinear attribute)": [[2, "masmod.api.EvTwoCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.ivonecmtlinear attribute)": [[2, "masmod.api.IvOneCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.IvOneCmtMichaelisMenten.index_observe_cmt"]], "index_observe_cmt (masmod.api.ivthreecmtlinear attribute)": [[2, "masmod.api.IvThreeCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.ivtwocmtlinear attribute)": [[2, "masmod.api.IvTwoCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.evonecmtlinear attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.evthreecmtlinear attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.evtwocmtlinear attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.ivonecmtlinear attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.ivthreecmtlinear attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.index_observe_cmt"]], "index_observe_cmt (masmod.api.pk.ivtwocmtlinear attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.index_observe_cmt"]], "info() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.info"]], "init_pop_params() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.init_pop_params"]], "init_pop_params() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.init_pop_params"]], "init_pop_params() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.init_pop_params"]], "inverse() (masmod.api.log method)": [[2, "masmod.api.log.inverse"]], "ipred (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.ipred"]], "ipred (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.ipred"]], "iter_details (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.iter_details"]], "iter_details (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.iter_details"]], "iter_details (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.iter_details"]], "likelihood() (in module masmod.api)": [[2, "masmod.api.likelihood"]], "ln (in module masmod.api)": [[2, "masmod.api.ln"]], "log (class in masmod.api)": [[2, "masmod.api.log"]], "masmod.api": [[2, "module-masmod.api"]], "masmod.api.model": [[2, "module-masmod.api.model"]], "masmod.api.nonmem_compat": [[2, "module-masmod.api.nonmem_compat"]], "masmod.api.parameters": [[2, "module-masmod.api.parameters"]], "masmod.api.pk": [[2, "module-masmod.api.pk"]], "masmod.api.plot": [[2, "module-masmod.api.plot"]], "masmod.api.typing": [[2, "module-masmod.api.typing"]], "mod (masmod.api.popmodel property)": [[2, "masmod.api.PopModel.mod"]], "mod (masmod.api.model.popmodel property)": [[2, "masmod.api.model.PopModel.mod"]], "mod (masmod.api.typing.ipopmodel property)": [[2, "masmod.api.typing.IPopModel.mod"]], "mod_source (masmod.api.nonmem_compat.translateresult property)": [[2, "masmod.api.nonmem_compat.TranslateResult.mod_source"]], "model_ptr (masmod.api.popmodel property)": [[2, "masmod.api.PopModel.model_ptr"]], "model_ptr (masmod.api.model.popmodel property)": [[2, "masmod.api.model.PopModel.model_ptr"]], "model_ptr (masmod.api.typing.ipopmodel property)": [[2, "masmod.api.typing.IPopModel.model_ptr"]], "mu() (in module masmod.api)": [[2, "masmod.api.mu"]], "n_cmt (masmod.api.evonecmtlinear attribute)": [[2, "masmod.api.EvOneCmtLinear.n_cmt"]], "n_cmt (masmod.api.evthreecmtlinear attribute)": [[2, "masmod.api.EvThreeCmtLinear.n_cmt"]], "n_cmt (masmod.api.evtwocmtlinear attribute)": [[2, "masmod.api.EvTwoCmtLinear.n_cmt"]], "n_cmt (masmod.api.ivonecmtlinear attribute)": [[2, "masmod.api.IvOneCmtLinear.n_cmt"]], "n_cmt (masmod.api.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.IvOneCmtMichaelisMenten.n_cmt"]], "n_cmt (masmod.api.ivthreecmtlinear attribute)": [[2, "masmod.api.IvThreeCmtLinear.n_cmt"]], "n_cmt (masmod.api.ivtwocmtlinear attribute)": [[2, "masmod.api.IvTwoCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.evonecmtlinear attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.evthreecmtlinear attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.evtwocmtlinear attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.ivonecmtlinear attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.ivonecmtmichaelismenten attribute)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.n_cmt"]], "n_cmt (masmod.api.pk.ivthreecmtlinear attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.n_cmt"]], "n_cmt (masmod.api.pk.ivtwocmtlinear attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.n_cmt"]], "n_iter (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.n_iter"]], "n_iter (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.n_iter"]], "n_iter (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.n_iter"]], "name (masmod.api.logginglogger property)": [[2, "masmod.api.LoggingLogger.name"]], "neg2ll() (in module masmod.api)": [[2, "masmod.api.neg2ll"]], "nobs (masmod.api.modeldata property)": [[2, "masmod.api.ModelData.nobs"]], "omega() (in module masmod.api)": [[2, "masmod.api.omega"]], "plot_goodness_of_fit() (masmod.api.fitresult method)": [[2, "masmod.api.FitResult.plot_goodness_of_fit"]], "plot_goodness_of_fit() (masmod.api.typing.iestimationresult method)": [[2, "masmod.api.typing.IEstimationResult.plot_goodness_of_fit"]], "plot_individual() (masmod.api.typing.isimulationresult method)": [[2, "masmod.api.typing.ISimulationResult.plot_individual"]], "plot_individual_fit() (masmod.api.fitresult method)": [[2, "masmod.api.FitResult.plot_individual_fit"]], "plot_individual_fit() (masmod.api.typing.iestimationresult method)": [[2, "masmod.api.typing.IEstimationResult.plot_individual_fit"]], "plot_interval() (masmod.api.typing.isimulationresult method)": [[2, "masmod.api.typing.ISimulationResult.plot_interval"]], "plot_iteration_trace() (masmod.api.fitresult method)": [[2, "masmod.api.FitResult.plot_iteration_trace"]], "pred (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.pred"]], "pred (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.pred"]], "pred() (masmod.api.module method)": [[2, "masmod.api.Module.pred"]], "previous_est_result (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.previous_est_result"]], "read_nonmem_data() (in module masmod.api)": [[2, "masmod.api.read_nonmem_data"]], "read_nonmem_data() (in module masmod.api.nonmem_compat)": [[2, "masmod.api.nonmem_compat.read_nonmem_data"]], "reserved_colnames (masmod.api.modeldata property)": [[2, "masmod.api.ModelData.reserved_colnames"]], "rse (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.rse"]], "rse (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.rse"]], "sampling (masmod.api.modeldata property)": [[2, "masmod.api.ModelData.sampling"]], "show() (masmod.api.iplotlyplot method)": [[2, "masmod.api.IPlotlyPlot.show"]], "show() (masmod.api.plot.iplotlyplot method)": [[2, "masmod.api.plot.IPlotlyPlot.show"]], "shrinkage (masmod.api.estimationresult property)": [[2, "masmod.api.EstimationResult.shrinkage"]], "shrinkage (masmod.api.fitresult property)": [[2, "masmod.api.FitResult.shrinkage"]], "shrinkage (masmod.api.typing.iestimationresult property)": [[2, "masmod.api.typing.IEstimationResult.shrinkage"]], "sigma() (in module masmod.api)": [[2, "masmod.api.sigma"]], "simulate() (masmod.api.fitresult method)": [[2, "masmod.api.FitResult.simulate"]], "simulate() (masmod.api.popmodel method)": [[2, "masmod.api.PopModel.simulate"]], "simulate() (masmod.api.model.popmodel method)": [[2, "masmod.api.model.PopModel.simulate"]], "simulate() (masmod.api.typing.ipopmodel method)": [[2, "masmod.api.typing.IPopModel.simulate"]], "simulated_df (masmod.api.typing.isimulationresult property)": [[2, "masmod.api.typing.ISimulationResult.simulated_df"]], "split_nonmem_data() (in module masmod.api)": [[2, "masmod.api.split_nonmem_data"]], "split_nonmem_data() (in module masmod.api.nonmem_compat)": [[2, "masmod.api.nonmem_compat.split_nonmem_data"]], "taylor_term() (masmod.api.exp static method)": [[2, "masmod.api.exp.taylor_term"]], "taylor_term() (masmod.api.log static method)": [[2, "masmod.api.log.taylor_term"]], "theta() (in module masmod.api)": [[2, "masmod.api.theta"]], "theta_names (masmod.api.popparams property)": [[2, "masmod.api.PopParams.theta_names"]], "theta_names (masmod.api.parameters.popparams property)": [[2, "masmod.api.parameters.PopParams.theta_names"]], "to_dict() (masmod.api.parameterset method)": [[2, "masmod.api.ParameterSet.to_dict"]], "trans (masmod.api.evonecmtlinear.trans1 attribute)": [[2, "masmod.api.EvOneCmtLinear.trans1.trans"]], "trans (masmod.api.evonecmtlinear.trans2 attribute)": [[2, "masmod.api.EvOneCmtLinear.trans2.trans"]], "trans (masmod.api.evthreecmtlinear.trans1 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans1.trans"]], "trans (masmod.api.evthreecmtlinear.trans4 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans4.trans"]], "trans (masmod.api.evthreecmtlinear.trans6 attribute)": [[2, "masmod.api.EvThreeCmtLinear.trans6.trans"]], "trans (masmod.api.evtwocmtlinear.trans1 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans1.trans"]], "trans (masmod.api.evtwocmtlinear.trans3 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans3.trans"]], "trans (masmod.api.evtwocmtlinear.trans4 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans4.trans"]], "trans (masmod.api.evtwocmtlinear.trans5 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans5.trans"]], "trans (masmod.api.evtwocmtlinear.trans6 attribute)": [[2, "masmod.api.EvTwoCmtLinear.trans6.trans"]], "trans (masmod.api.ivonecmtlinear.trans1 attribute)": [[2, "masmod.api.IvOneCmtLinear.trans1.trans"]], "trans (masmod.api.ivonecmtlinear.trans2 attribute)": [[2, "masmod.api.IvOneCmtLinear.trans2.trans"]], "trans (masmod.api.ivonecmtmichaelismenten.trans1 attribute)": [[2, "masmod.api.IvOneCmtMichaelisMenten.trans1.trans"]], "trans (masmod.api.ivthreecmtlinear.trans1 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans1.trans"]], "trans (masmod.api.ivthreecmtlinear.trans4 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans4.trans"]], "trans (masmod.api.ivthreecmtlinear.trans6 attribute)": [[2, "masmod.api.IvThreeCmtLinear.trans6.trans"]], "trans (masmod.api.ivtwocmtlinear.trans1 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans1.trans"]], "trans (masmod.api.ivtwocmtlinear.trans3 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans3.trans"]], "trans (masmod.api.ivtwocmtlinear.trans4 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans4.trans"]], "trans (masmod.api.ivtwocmtlinear.trans5 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans5.trans"]], "trans (masmod.api.ivtwocmtlinear.trans6 attribute)": [[2, "masmod.api.IvTwoCmtLinear.trans6.trans"]], "trans (masmod.api.pk.evonecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.trans1.trans"]], "trans (masmod.api.pk.evonecmtlinear.trans2 attribute)": [[2, "masmod.api.pk.EvOneCmtLinear.trans2.trans"]], "trans (masmod.api.pk.evthreecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans1.trans"]], "trans (masmod.api.pk.evthreecmtlinear.trans4 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans4.trans"]], "trans (masmod.api.pk.evthreecmtlinear.trans6 attribute)": [[2, "masmod.api.pk.EvThreeCmtLinear.trans6.trans"]], "trans (masmod.api.pk.evtwocmtlinear.trans1 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans1.trans"]], "trans (masmod.api.pk.evtwocmtlinear.trans3 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans3.trans"]], "trans (masmod.api.pk.evtwocmtlinear.trans4 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans4.trans"]], "trans (masmod.api.pk.evtwocmtlinear.trans5 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans5.trans"]], "trans (masmod.api.pk.evtwocmtlinear.trans6 attribute)": [[2, "masmod.api.pk.EvTwoCmtLinear.trans6.trans"]], "trans (masmod.api.pk.ivonecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.trans1.trans"]], "trans (masmod.api.pk.ivonecmtlinear.trans2 attribute)": [[2, "masmod.api.pk.IvOneCmtLinear.trans2.trans"]], "trans (masmod.api.pk.ivonecmtmichaelismenten.trans1 attribute)": [[2, "masmod.api.pk.IvOneCmtMichaelisMenten.trans1.trans"]], "trans (masmod.api.pk.ivthreecmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans1.trans"]], "trans (masmod.api.pk.ivthreecmtlinear.trans4 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans4.trans"]], "trans (masmod.api.pk.ivthreecmtlinear.trans6 attribute)": [[2, "masmod.api.pk.IvThreeCmtLinear.trans6.trans"]], "trans (masmod.api.pk.ivtwocmtlinear.trans1 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans1.trans"]], "trans (masmod.api.pk.ivtwocmtlinear.trans3 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans3.trans"]], "trans (masmod.api.pk.ivtwocmtlinear.trans4 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans4.trans"]], "trans (masmod.api.pk.ivtwocmtlinear.trans5 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans5.trans"]], "trans (masmod.api.pk.ivtwocmtlinear.trans6 attribute)": [[2, "masmod.api.pk.IvTwoCmtLinear.trans6.trans"]], "translate_nonmem() (in module masmod.api.nonmem_compat)": [[2, "masmod.api.nonmem_compat.translate_nonmem"]], "tril (masmod.api.block attribute)": [[2, "masmod.api.Block.tril"]], "warning() (masmod.api.logginglogger method)": [[2, "masmod.api.LoggingLogger.warning"]], "work_dir (masmod.api.nonmem_compat.translateresult property)": [[2, "masmod.api.nonmem_compat.TranslateResult.work_dir"]], "y (masmod.api.typing.isimulationresult property)": [[2, "masmod.api.typing.ISimulationResult.y"]], "modeldata (class in masmod.api.data)": [[3, "masmod.api.data.ModelData"]], "__add__() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.__add__"]], "add_covariates() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.add_covariates"]], "add_dosing() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.add_dosing"]], "add_sampling() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.add_sampling"]], "copy() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.copy"]], "dosing (masmod.api.data.modeldata property)": [[3, "masmod.api.data.ModelData.dosing"]], "et() (in module masmod.api.data)": [[3, "masmod.api.data.et"]], "explore_bivariate_plot() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.explore_bivariate_plot"]], "explore_contour_plot() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.explore_contour_plot"]], "explore_covariates_plot() (masmod.api.data.modeldata method)": [[3, "masmod.api.data.ModelData.explore_covariates_plot"]], "masmod.api.data": [[3, "module-masmod.api.data"]], "nobs (masmod.api.data.modeldata property)": [[3, "masmod.api.data.ModelData.nobs"]], "reserved_colnames (masmod.api.data.modeldata property)": [[3, "masmod.api.data.ModelData.reserved_colnames"]], "sampling (masmod.api.data.modeldata property)": [[3, "masmod.api.data.ModelData.sampling"]], "bootstrapresult (class in masmod.api.estimation.bootstrap)": [[4, "masmod.api.estimation.bootstrap.BootstrapResult"]], "estimationresult (class in masmod.api.estimation)": [[4, "masmod.api.estimation.EstimationResult"]], "estimationresult (class in masmod.api.estimation.estimation_result)": [[4, "masmod.api.estimation.estimation_result.EstimationResult"]], "estimationresult (class in masmod.api.estimation.fit_result)": [[4, "masmod.api.estimation.fit_result.EstimationResult"]], "fo() (in module masmod.api.estimation)": [[4, "masmod.api.estimation.FO"]], "fo() (in module masmod.api.estimation.estimation_method)": [[4, "masmod.api.estimation.estimation_method.FO"]], "focei() (in module masmod.api.estimation)": [[4, "masmod.api.estimation.FOCEi"]], "focei() (in module masmod.api.estimation.estimation_method)": [[4, "masmod.api.estimation.estimation_method.FOCEi"]], "fitresult (class in masmod.api.estimation)": [[4, "masmod.api.estimation.FitResult"]], "laplace() (in module masmod.api.estimation)": [[4, "masmod.api.estimation.Laplace"]], "laplace() (in module masmod.api.estimation.estimation_method)": [[4, "masmod.api.estimation.estimation_method.Laplace"]], "saem() (in module masmod.api.estimation)": [[4, "masmod.api.estimation.SAEM"]], "saem() (in module masmod.api.estimation.estimation_method)": [[4, "masmod.api.estimation.estimation_method.SAEM"]], "vpcresult (class in masmod.api.estimation.vpc)": [[4, "masmod.api.estimation.vpc.VpcResult"]], "wres (class in masmod.api.estimation.wres)": [[4, "masmod.api.estimation.wres.Wres"]], "bootstrap() (in module masmod.api.estimation.bootstrap)": [[4, "masmod.api.estimation.bootstrap.bootstrap"]], "ci_df (masmod.api.estimation.vpc.vpcresult property)": [[4, "masmod.api.estimation.vpc.VpcResult.ci_df"]], "compute_se() (masmod.api.estimation.fitresult method)": [[4, "masmod.api.estimation.FitResult.compute_se"]], "compute_wres_list() (masmod.api.estimation.wres.wres method)": [[4, "masmod.api.estimation.wres.Wres.compute_wres_list"]], "compute_wres_series() (masmod.api.estimation.wres.wres method)": [[4, "masmod.api.estimation.wres.Wres.compute_wres_series"]], "converged (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.converged"]], "converged (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.converged"]], "converged (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.converged"]], "converged (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.converged"]], "df (masmod.api.estimation.bootstrap.bootstrapresult property)": [[4, "masmod.api.estimation.bootstrap.BootstrapResult.df"]], "elapsed_time (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.elapsed_time"]], "elapsed_time (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.elapsed_time"]], "elapsed_time (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.elapsed_time"]], "elapsed_time (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.elapsed_time"]], "empirical_bayesian_estimation (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.empirical_bayesian_estimation"]], "empirical_bayesian_estimation (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.empirical_bayesian_estimation"]], "estimations (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.estimations"]], "final_obj_val (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.final_obj_val"]], "final_obj_val (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.final_obj_val"]], "final_obj_val (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.final_obj_val"]], "final_obj_val (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.final_obj_val"]], "final_pop_params (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.final_pop_params"]], "final_pop_params (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.final_pop_params"]], "final_pop_params (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.final_pop_params"]], "final_pop_params (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.final_pop_params"]], "ipred (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.ipred"]], "iter_details (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.iter_details"]], "iter_details (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.iter_details"]], "iter_details (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.iter_details"]], "iter_details (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.iter_details"]], "level (masmod.api.estimation.bootstrap.bootstrapresult property)": [[4, "masmod.api.estimation.bootstrap.BootstrapResult.level"]], "level (masmod.api.estimation.vpc.vpcresult property)": [[4, "masmod.api.estimation.vpc.VpcResult.level"]], "masmod.api.estimation": [[4, "module-masmod.api.estimation"]], "masmod.api.estimation.bootstrap": [[4, "module-masmod.api.estimation.bootstrap"]], "masmod.api.estimation.estimation_method": [[4, "module-masmod.api.estimation.estimation_method"]], "masmod.api.estimation.estimation_result": [[4, "module-masmod.api.estimation.estimation_result"]], "masmod.api.estimation.fit_result": [[4, "module-masmod.api.estimation.fit_result"]], "masmod.api.estimation.vpc": [[4, "module-masmod.api.estimation.vpc"]], "masmod.api.estimation.wres": [[4, "module-masmod.api.estimation.wres"]], "n_iter (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.n_iter"]], "n_iter (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.n_iter"]], "n_iter (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.n_iter"]], "n_iter (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.n_iter"]], "plot_goodness_of_fit() (masmod.api.estimation.fitresult method)": [[4, "masmod.api.estimation.FitResult.plot_goodness_of_fit"]], "plot_individual_fit() (masmod.api.estimation.fitresult method)": [[4, "masmod.api.estimation.FitResult.plot_individual_fit"]], "plot_iteration_trace() (masmod.api.estimation.fitresult method)": [[4, "masmod.api.estimation.FitResult.plot_iteration_trace"]], "pred (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.pred"]], "previous_est_result (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.previous_est_result"]], "previous_est_result (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.previous_est_result"]], "previous_est_result (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.previous_est_result"]], "rse (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.rse"]], "show_bin() (masmod.api.estimation.vpc.vpcresult method)": [[4, "masmod.api.estimation.vpc.VpcResult.show_bin"]], "show_level() (masmod.api.estimation.bootstrap.bootstrapresult method)": [[4, "masmod.api.estimation.bootstrap.BootstrapResult.show_level"]], "show_level() (masmod.api.estimation.vpc.vpcresult method)": [[4, "masmod.api.estimation.vpc.VpcResult.show_level"]], "shrinkage (masmod.api.estimation.estimationresult property)": [[4, "masmod.api.estimation.EstimationResult.shrinkage"]], "shrinkage (masmod.api.estimation.fitresult property)": [[4, "masmod.api.estimation.FitResult.shrinkage"]], "shrinkage (masmod.api.estimation.estimation_result.estimationresult property)": [[4, "masmod.api.estimation.estimation_result.EstimationResult.shrinkage"]], "shrinkage (masmod.api.estimation.fit_result.estimationresult property)": [[4, "masmod.api.estimation.fit_result.EstimationResult.shrinkage"]], "simulate() (masmod.api.estimation.fitresult method)": [[4, "masmod.api.estimation.FitResult.simulate"]], "simulate_df (masmod.api.estimation.vpc.vpcresult property)": [[4, "masmod.api.estimation.vpc.VpcResult.simulate_df"]], "vpc() (in module masmod.api.estimation.vpc)": [[4, "masmod.api.estimation.vpc.vpc"]], "parameterset (class in masmod.api.simulation.parameter_set)": [[5, "masmod.api.simulation.parameter_set.ParameterSet"]], "simulationresult (class in masmod.api.simulation)": [[5, "masmod.api.simulation.SimulationResult"]], "simulationresult (class in masmod.api.simulation.simulation)": [[5, "masmod.api.simulation.simulation.SimulationResult"]], "masmod.api.simulation": [[5, "module-masmod.api.simulation"]], "masmod.api.simulation.parameter_set": [[5, "module-masmod.api.simulation.parameter_set"]], "masmod.api.simulation.simulation": [[5, "module-masmod.api.simulation.simulation"]], "plot_individual() (masmod.api.simulation.simulationresult method)": [[5, "masmod.api.simulation.SimulationResult.plot_individual"]], "plot_individual() (masmod.api.simulation.simulation.simulationresult method)": [[5, "masmod.api.simulation.simulation.SimulationResult.plot_individual"]], "plot_interval() (masmod.api.simulation.simulationresult method)": [[5, "masmod.api.simulation.SimulationResult.plot_interval"]], "plot_interval() (masmod.api.simulation.simulation.simulationresult method)": [[5, "masmod.api.simulation.simulation.SimulationResult.plot_interval"]], "reorder_matrix() (in module masmod.api.simulation.parameter_set)": [[5, "masmod.api.simulation.parameter_set.reorder_matrix"]], "reorganize_omega() (in module masmod.api.simulation.parameter_set)": [[5, "masmod.api.simulation.parameter_set.reorganize_omega"]], "reorganize_sigma() (in module masmod.api.simulation.parameter_set)": [[5, "masmod.api.simulation.parameter_set.reorganize_sigma"]], "reorganize_theta() (in module masmod.api.simulation.parameter_set)": [[5, "masmod.api.simulation.parameter_set.reorganize_theta"]], "simulate() (in module masmod.api.simulation.simulation)": [[5, "masmod.api.simulation.simulation.simulate"]], "simulated_df (masmod.api.simulation.simulationresult property)": [[5, "masmod.api.simulation.SimulationResult.simulated_df"]], "simulated_df (masmod.api.simulation.simulation.simulationresult property)": [[5, "masmod.api.simulation.simulation.SimulationResult.simulated_df"]], "to_dict() (masmod.api.simulation.parameter_set.parameterset method)": [[5, "masmod.api.simulation.parameter_set.ParameterSet.to_dict"]], "y (masmod.api.simulation.simulationresult property)": [[5, "masmod.api.simulation.SimulationResult.y"]], "y (masmod.api.simulation.simulation.simulationresult property)": [[5, "masmod.api.simulation.simulation.SimulationResult.y"]], "autodiffdadtwrt (class in masmod.ast_worker.autodiff)": [[6, "masmod.ast_worker.autodiff.AutoDiffDADtWrt"]], "autodiffnodetransformer (class in masmod.ast_worker)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer"]], "autodiffnodetransformer (class in masmod.ast_worker.autodiff)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer"]], "autodifftargetwrt (class in masmod.ast_worker.autodiff)": [[6, "masmod.ast_worker.autodiff.AutoDiffTargetWrt"]], "funcreturnvisitor (class in masmod.ast_worker)": [[6, "masmod.ast_worker.FuncReturnVisitor"]], "funcreturnvisitor (class in masmod.ast_worker.func_return)": [[6, "masmod.ast_worker.func_return.FuncReturnVisitor"]], "ifelsetransformer (class in masmod.ast_worker)": [[6, "masmod.ast_worker.IfElseTransformer"]], "integralttransformer (class in masmod.ast_worker)": [[6, "masmod.ast_worker.IntegralTTransformer"]], "integralttransformer (class in masmod.ast_worker.integral_t_transformer)": [[6, "masmod.ast_worker.integral_t_transformer.IntegralTTransformer"]], "cmt (masmod.ast_worker.autodiff.autodiffdadtwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffDADtWrt.cmt"]], "func_def (masmod.ast_worker.funcreturnvisitor property)": [[6, "masmod.ast_worker.FuncReturnVisitor.func_def"]], "func_def (masmod.ast_worker.func_return.funcreturnvisitor property)": [[6, "masmod.ast_worker.func_return.FuncReturnVisitor.func_def"]], "insert_dosing_deriv_inline() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.insert_dosing_deriv_inline"]], "insert_dosing_deriv_inline() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.insert_dosing_deriv_inline"]], "insert_param_deriv_inline() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.insert_param_deriv_inline"]], "insert_param_deriv_inline() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.insert_param_deriv_inline"]], "insert_t0_update_inline() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.insert_t0_update_inline"]], "insert_t0_update_inline() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.insert_t0_update_inline"]], "masmod.ast_worker": [[6, "module-masmod.ast_worker"]], "masmod.ast_worker.autodiff": [[6, "module-masmod.ast_worker.autodiff"]], "masmod.ast_worker.func_return": [[6, "module-masmod.ast_worker.func_return"]], "masmod.ast_worker.integral_t_transformer": [[6, "module-masmod.ast_worker.integral_t_transformer"]], "return_expr (masmod.ast_worker.funcreturnvisitor property)": [[6, "masmod.ast_worker.FuncReturnVisitor.return_expr"]], "return_expr (masmod.ast_worker.func_return.funcreturnvisitor property)": [[6, "masmod.ast_worker.func_return.FuncReturnVisitor.return_expr"]], "subroutine (masmod.ast_worker.autodiffnodetransformer property)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.subroutine"]], "subroutine (masmod.ast_worker.autodiff.autodiffnodetransformer property)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.subroutine"]], "target_name (masmod.ast_worker.autodiff.autodifftargetwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffTargetWrt.target_name"]], "visit() (masmod.ast_worker.ifelsetransformer method)": [[6, "masmod.ast_worker.IfElseTransformer.visit"]], "visit_assign() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.visit_Assign"]], "visit_assign() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.visit_Assign"]], "visit_attribute() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.visit_Attribute"]], "visit_attribute() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.visit_Attribute"]], "visit_call() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.visit_Call"]], "visit_call() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.visit_Call"]], "visit_functiondef() (masmod.ast_worker.funcreturnvisitor method)": [[6, "masmod.ast_worker.FuncReturnVisitor.visit_FunctionDef"]], "visit_functiondef() (masmod.ast_worker.func_return.funcreturnvisitor method)": [[6, "masmod.ast_worker.func_return.FuncReturnVisitor.visit_FunctionDef"]], "visit_if() (masmod.ast_worker.autodiffnodetransformer method)": [[6, "masmod.ast_worker.AutoDiffNodeTransformer.visit_If"]], "visit_if() (masmod.ast_worker.autodiff.autodiffnodetransformer method)": [[6, "masmod.ast_worker.autodiff.AutoDiffNodeTransformer.visit_If"]], "visit_name() (masmod.ast_worker.integralttransformer method)": [[6, "masmod.ast_worker.IntegralTTransformer.visit_Name"]], "visit_name() (masmod.ast_worker.integral_t_transformer.integralttransformer method)": [[6, "masmod.ast_worker.integral_t_transformer.IntegralTTransformer.visit_Name"]], "visit_return() (masmod.ast_worker.funcreturnvisitor method)": [[6, "masmod.ast_worker.FuncReturnVisitor.visit_Return"]], "visit_return() (masmod.ast_worker.func_return.funcreturnvisitor method)": [[6, "masmod.ast_worker.func_return.FuncReturnVisitor.visit_Return"]], "wrt (masmod.ast_worker.autodiff.autodiffdadtwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffDADtWrt.wrt"]], "wrt (masmod.ast_worker.autodiff.autodifftargetwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffTargetWrt.wrt"]], "wrt2nd (masmod.ast_worker.autodiff.autodiffdadtwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffDADtWrt.wrt2nd"]], "wrt2nd (masmod.ast_worker.autodiff.autodifftargetwrt attribute)": [[6, "masmod.ast_worker.autodiff.AutoDiffTargetWrt.wrt2nd"]], "cond_masking (masmod.ast_worker.if_else.condition_hoist.ifelseconditionhoisttransformer attribute)": [[7, "masmod.ast_worker.if_else.condition_hoist.IfElseConditionHoistTransformer.COND_MASKING"]], "ifelseconditionhoisttransformer (class in masmod.ast_worker.if_else.condition_hoist)": [[7, "masmod.ast_worker.if_else.condition_hoist.IfElseConditionHoistTransformer"]], "ifelsetransformer (class in masmod.ast_worker.if_else)": [[7, "masmod.ast_worker.if_else.IfElseTransformer"]], "ifelsetransformer (class in masmod.ast_worker.if_else.if_else)": [[7, "masmod.ast_worker.if_else.if_else.IfElseTransformer"]], "ifelsevariablehoisttransformer (class in masmod.ast_worker.if_else.variable_hoist)": [[7, "masmod.ast_worker.if_else.variable_hoist.IfElseVariableHoistTransformer"]], "ifelsevariableoverridetransformer (class in masmod.ast_worker.if_else.variable_override)": [[7, "masmod.ast_worker.if_else.variable_override.IfElseVariableOverrideTransformer"]], "visitifresult (class in masmod.ast_worker.if_else.variable_hoist)": [[7, "masmod.ast_worker.if_else.variable_hoist.VisitIfResult"]], "visitifresult (class in masmod.ast_worker.if_else.variable_override)": [[7, "masmod.ast_worker.if_else.variable_override.VisitIfResult"]], "condition_branch_var_names (masmod.ast_worker.if_else.variable_override.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_override.VisitIfResult.condition_branch_var_names"]], "hoisting_assignments (masmod.ast_worker.if_else.variable_hoist.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_hoist.VisitIfResult.hoisting_assignments"]], "hoisting_assignments (masmod.ast_worker.if_else.variable_override.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_override.VisitIfResult.hoisting_assignments"]], "hoisting_mask_mapping (masmod.ast_worker.if_else.variable_hoist.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_hoist.VisitIfResult.hoisting_mask_mapping"]], "if_node (masmod.ast_worker.if_else.variable_hoist.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_hoist.VisitIfResult.if_node"]], "if_node (masmod.ast_worker.if_else.variable_override.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_override.VisitIfResult.if_node"]], "masmod.ast_worker.if_else": [[7, "module-masmod.ast_worker.if_else"]], "masmod.ast_worker.if_else.condition_hoist": [[7, "module-masmod.ast_worker.if_else.condition_hoist"]], "masmod.ast_worker.if_else.if_else": [[7, "module-masmod.ast_worker.if_else.if_else"]], "masmod.ast_worker.if_else.variable_hoist": [[7, "module-masmod.ast_worker.if_else.variable_hoist"]], "masmod.ast_worker.if_else.variable_override": [[7, "module-masmod.ast_worker.if_else.variable_override"]], "override_mask_mapping (masmod.ast_worker.if_else.variable_override.visitifresult attribute)": [[7, "masmod.ast_worker.if_else.variable_override.VisitIfResult.override_mask_mapping"]], "visit() (masmod.ast_worker.if_else.ifelsetransformer method)": [[7, "masmod.ast_worker.if_else.IfElseTransformer.visit"]], "visit() (masmod.ast_worker.if_else.if_else.ifelsetransformer method)": [[7, "masmod.ast_worker.if_else.if_else.IfElseTransformer.visit"]], "visit_assign() (masmod.ast_worker.if_else.condition_hoist.ifelseconditionhoisttransformer method)": [[7, "masmod.ast_worker.if_else.condition_hoist.IfElseConditionHoistTransformer.visit_Assign"]], "visit_assign() (masmod.ast_worker.if_else.variable_hoist.ifelsevariablehoisttransformer method)": [[7, "masmod.ast_worker.if_else.variable_hoist.IfElseVariableHoistTransformer.visit_Assign"]], "visit_assign() (masmod.ast_worker.if_else.variable_override.ifelsevariableoverridetransformer method)": [[7, "masmod.ast_worker.if_else.variable_override.IfElseVariableOverrideTransformer.visit_Assign"]], "visit_if() (masmod.ast_worker.if_else.condition_hoist.ifelseconditionhoisttransformer method)": [[7, "masmod.ast_worker.if_else.condition_hoist.IfElseConditionHoistTransformer.visit_If"]], "visit_if() (masmod.ast_worker.if_else.variable_hoist.ifelsevariablehoisttransformer method)": [[7, "masmod.ast_worker.if_else.variable_hoist.IfElseVariableHoistTransformer.visit_If"]], "visit_if() (masmod.ast_worker.if_else.variable_override.ifelsevariableoverridetransformer method)": [[7, "masmod.ast_worker.if_else.variable_override.IfElseVariableOverrideTransformer.visit_If"]], "cccompiler (class in masmod.compiler)": [[8, "masmod.compiler.CCCompiler"]], "cccompiler (class in masmod.compiler.cc_compile)": [[8, "masmod.compiler.cc_compile.CCCompiler"]], "compileresult (class in masmod.compiler.cc_compile)": [[8, "masmod.compiler.cc_compile.CompileResult"]], "compile() (masmod.compiler.cccompiler method)": [[8, "masmod.compiler.CCCompiler.compile"]], "compile() (masmod.compiler.cc_compile.cccompiler method)": [[8, "masmod.compiler.cc_compile.CCCompiler.compile"]], "masmod.compiler": [[8, "module-masmod.compiler"]], "masmod.compiler.cc_compile": [[8, "module-masmod.compiler.cc_compile"]], "target_file (masmod.compiler.cc_compile.compileresult attribute)": [[8, "masmod.compiler.cc_compile.CompileResult.target_file"]], "as_base_exp() (masmod.functional.log method)": [[9, "masmod.functional.log.as_base_exp"]], "as_real_imag() (masmod.functional.exp method)": [[9, "masmod.functional.exp.as_real_imag"]], "as_real_imag() (masmod.functional.log method)": [[9, "masmod.functional.log.as_real_imag"]], "base (masmod.functional.exp property)": [[9, "masmod.functional.exp.base"]], "default_assumptions (masmod.functional.exp attribute)": [[9, "masmod.functional.exp.default_assumptions"]], "default_assumptions (masmod.functional.log attribute)": [[9, "masmod.functional.log.default_assumptions"]], "eval() (masmod.functional.exp class method)": [[9, "masmod.functional.exp.eval"]], "eval() (masmod.functional.log class method)": [[9, "masmod.functional.log.eval"]], "exp (class in masmod.functional)": [[9, "masmod.functional.exp"]], "fdiff() (masmod.functional.exp method)": [[9, "masmod.functional.exp.fdiff"]], "fdiff() (masmod.functional.log method)": [[9, "masmod.functional.log.fdiff"]], "inverse() (masmod.functional.log method)": [[9, "masmod.functional.log.inverse"]], "ln (in module masmod.functional)": [[9, "masmod.functional.ln"]], "log (class in masmod.functional)": [[9, "masmod.functional.log"]], "masmod.functional": [[9, "module-masmod.functional"]], "taylor_term() (masmod.functional.exp static method)": [[9, "masmod.functional.exp.taylor_term"]], "taylor_term() (masmod.functional.log static method)": [[9, "masmod.functional.log.taylor_term"]], "module (class in masmod.module)": [[10, "masmod.module.Module"]], "module (class in masmod.module.module)": [[10, "masmod.module.module.Module"]], "pkmodule (class in masmod.module.pk_module)": [[10, "masmod.module.pk_module.PKModule"]], "index_dosing_cmt (masmod.module.pk_module.pkmodule attribute)": [[10, "masmod.module.pk_module.PKModule.index_dosing_cmt"]], "index_observe_cmt (masmod.module.pk_module.pkmodule attribute)": [[10, "masmod.module.pk_module.PKModule.index_observe_cmt"]], "likelihood() (in module masmod.module)": [[10, "masmod.module.likelihood"]], "likelihood() (in module masmod.module.module)": [[10, "masmod.module.module.likelihood"]], "masmod.module": [[10, "module-masmod.module"]], "masmod.module.module": [[10, "module-masmod.module.module"]], "masmod.module.pk_module": [[10, "module-masmod.module.pk_module"]], "n_cmt (masmod.module.pk_module.pkmodule attribute)": [[10, "masmod.module.pk_module.PKModule.n_cmt"]], "neg2ll() (in module masmod.module)": [[10, "masmod.module.neg2ll"]], "neg2ll() (in module masmod.module.module)": [[10, "masmod.module.module.neg2ll"]], "pred() (masmod.module.module method)": [[10, "masmod.module.Module.pred"]], "pred() (masmod.module.module.module method)": [[10, "masmod.module.module.Module.pred"]], "abstractgroupbyableplotlyplot (class in masmod.plot.abstract_groupby)": [[11, "masmod.plot.abstract_groupby.AbstractGroupbyablePlotlyPlot"]], "abstractplotlyplot (class in masmod.plot.abstract)": [[11, "masmod.plot.abstract.AbstractPlotlyPlot"]], "bivariateplot (class in masmod.plot.explore)": [[11, "masmod.plot.explore.BivariatePlot"]], "contourplot (class in masmod.plot.explore)": [[11, "masmod.plot.explore.ContourPlot"]], "covariatesplot (class in masmod.plot.explore)": [[11, "masmod.plot.explore.CovariatesPlot"]], "gofplot (class in masmod.plot.gof_plot)": [[11, "masmod.plot.gof_plot.GofPlot"]], "igroupbyableplotlyplot (class in masmod.plot.interface)": [[11, "masmod.plot.interface.IGroupbyablePlotlyPlot"]], "iplotlyplot (class in masmod.plot.interface)": [[11, "masmod.plot.interface.IPlotlyPlot"]], "indfitplot (class in masmod.plot.ind_fit_plot)": [[11, "masmod.plot.ind_fit_plot.IndFitPlot"]], "iterplot (class in masmod.plot.iter_plot)": [[11, "masmod.plot.iter_plot.IterPlot"]], "luv_to_xyz() (in module masmod.plot.explore)": [[11, "masmod.plot.explore.LUV_to_XYZ"]], "simulateindividualplot (class in masmod.plot.simulate_plot)": [[11, "masmod.plot.simulate_plot.SimulateIndividualPlot"]], "simulateintervalplot (class in masmod.plot.simulate_plot)": [[11, "masmod.plot.simulate_plot.SimulateIntervalPlot"]], "xyz_to_rgb() (in module masmod.plot.explore)": [[11, "masmod.plot.explore.XYZ_to_RGB"]], "diagonal_range() (in module masmod.plot.gof_plot)": [[11, "masmod.plot.gof_plot.diagonal_range"]], "eda_corr_plot_df() (in module masmod.plot.explore)": [[11, "masmod.plot.explore.eda_corr_plot_df"]], "figure (masmod.plot.abstract.abstractplotlyplot property)": [[11, "masmod.plot.abstract.AbstractPlotlyPlot.figure"]], "figure (masmod.plot.interface.iplotlyplot property)": [[11, "masmod.plot.interface.IPlotlyPlot.figure"]], "fill_colors (masmod.plot.simulate_plot.simulateintervalplot attribute)": [[11, "masmod.plot.simulate_plot.SimulateIntervalPlot.fill_colors"]], "get_color() (in module masmod.plot.explore)": [[11, "masmod.plot.explore.get_color"]], "groupby() (masmod.plot.abstract_groupby.abstractgroupbyableplotlyplot method)": [[11, "masmod.plot.abstract_groupby.AbstractGroupbyablePlotlyPlot.groupby"]], "groupby() (masmod.plot.interface.igroupbyableplotlyplot method)": [[11, "masmod.plot.interface.IGroupbyablePlotlyPlot.groupby"]], "masmod.plot": [[11, "module-masmod.plot"]], "masmod.plot.abstract": [[11, "module-masmod.plot.abstract"]], "masmod.plot.abstract_groupby": [[11, "module-masmod.plot.abstract_groupby"]], "masmod.plot.explore": [[11, "module-masmod.plot.explore"]], "masmod.plot.gof_plot": [[11, "module-masmod.plot.gof_plot"]], "masmod.plot.ind_fit_plot": [[11, "module-masmod.plot.ind_fit_plot"]], "masmod.plot.interface": [[11, "module-masmod.plot.interface"]], "masmod.plot.iter_plot": [[11, "module-masmod.plot.iter_plot"]], "masmod.plot.simulate_plot": [[11, "module-masmod.plot.simulate_plot"]], "percents (masmod.plot.simulate_plot.simulateintervalplot attribute)": [[11, "masmod.plot.simulate_plot.SimulateIntervalPlot.percents"]], "polarluv_to_luv() (in module masmod.plot.explore)": [[11, "masmod.plot.explore.polarLUV_to_LUV"]], "show() (masmod.plot.abstract.abstractplotlyplot method)": [[11, "masmod.plot.abstract.AbstractPlotlyPlot.show"]], "show() (masmod.plot.interface.iplotlyplot method)": [[11, "masmod.plot.interface.IPlotlyPlot.show"]], "trend_line() (in module masmod.plot.gof_plot)": [[11, "masmod.plot.gof_plot.trend_line"]], "block (class in masmod.symbols)": [[12, "masmod.symbols.Block"]], "varcontext (class in masmod.symbols)": [[12, "masmod.symbols.VarContext"]], "as_dict() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.as_dict"]], "as_full() (masmod.symbols.block method)": [[12, "masmod.symbols.Block.as_full"]], "column() (in module masmod.symbols)": [[12, "masmod.symbols.column"]], "compartment() (in module masmod.symbols)": [[12, "masmod.symbols.compartment"]], "copy() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.copy"]], "dimension (masmod.symbols.block attribute)": [[12, "masmod.symbols.Block.dimension"]], "generic_t (masmod.symbols.varcontext property)": [[12, "masmod.symbols.VarContext.generic_T"]], "get() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.get"]], "items() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.items"]], "keys() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.keys"]], "masmod.symbols": [[12, "module-masmod.symbols"]], "mu() (in module masmod.symbols)": [[12, "masmod.symbols.mu"]], "omega() (in module masmod.symbols)": [[12, "masmod.symbols.omega"]], "sigma() (in module masmod.symbols)": [[12, "masmod.symbols.sigma"]], "size() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.size"]], "subset() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.subset"]], "theta() (in module masmod.symbols)": [[12, "masmod.symbols.theta"]], "tril (masmod.symbols.block attribute)": [[12, "masmod.symbols.Block.tril"]], "update() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.update"]], "values() (masmod.symbols.varcontext method)": [[12, "masmod.symbols.VarContext.values"]], "astsympytranslator (class in masmod.translator)": [[13, "masmod.translator.ASTSympyTranslator"]], "astsympytranslator (class in masmod.translator.sympy_ast_trans)": [[13, "masmod.translator.sympy_ast_trans.ASTSympyTranslator"]], "cctranslator (class in masmod.translator)": [[13, "masmod.translator.CCTranslator"]], "cctranslator (class in masmod.translator.cc_trans)": [[13, "masmod.translator.cc_trans.CCTranslator"]], "evaluatedexpr (class in masmod.translator.cc_trans)": [[13, "masmod.translator.cc_trans.EvaluatedExpr"]], "funcsignature (class in masmod.translator.cc_trans)": [[13, "masmod.translator.cc_trans.FuncSignature"]], "module_factory_func_name (masmod.translator.cctranslator attribute)": [[13, "masmod.translator.CCTranslator.MODULE_FACTORY_FUNC_NAME"]], "module_factory_func_name (masmod.translator.cc_trans.cctranslator attribute)": [[13, "masmod.translator.cc_trans.CCTranslator.MODULE_FACTORY_FUNC_NAME"]], "value_type_bool (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_BOOL"]], "value_type_cmt_ptr (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_CMT_PTR"]], "value_type_cmt_sys_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_CMT_SYS_REF"]], "value_type_cube_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_CUBE_REF"]], "value_type_dosing_param (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_DOSING_PARAM"]], "value_type_dosing_param_const_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_DOSING_PARAM_CONST_REF"]], "value_type_double (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_DOUBLE"]], "value_type_double_context (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_DOUBLE_CONTEXT"]], "value_type_double_context_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_DOUBLE_CONTEXT_REF"]], "value_type_int (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_INT"]], "value_type_long (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_LONG"]], "value_type_mat (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_MAT"]], "value_type_mat_const_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_MAT_CONST_REF"]], "value_type_mat_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_MAT_REF"]], "value_type_pk_param (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_PK_PARAM"]], "value_type_pk_param_const_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_PK_PARAM_CONST_REF"]], "value_type_string (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_STRING"]], "value_type_string_context (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_STRING_CONTEXT"]], "value_type_string_context_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_STRING_CONTEXT_REF"]], "value_type_subroutine (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_SUBROUTINE"]], "value_type_subroutine_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_SUBROUTINE_REF"]], "value_type_vec (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_VEC"]], "value_type_vec_const_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_VEC_CONST_REF"]], "value_type_vec_ref (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_VEC_REF"]], "value_type_void (masmod.translator.cc_trans.valuetype attribute)": [[13, "masmod.translator.cc_trans.ValueType.VALUE_TYPE_VOID"]], "valuetype (class in masmod.translator.cc_trans)": [[13, "masmod.translator.cc_trans.ValueType"]], "args (masmod.translator.cc_trans.funcsignature attribute)": [[13, "masmod.translator.cc_trans.FuncSignature.args"]], "can_be_eq_to() (masmod.translator.cc_trans.valuetype method)": [[13, "masmod.translator.cc_trans.ValueType.can_be_eq_to"]], "from_dtype() (masmod.translator.cc_trans.valuetype class method)": [[13, "masmod.translator.cc_trans.ValueType.from_dtype"]], "from_val() (masmod.translator.cc_trans.valuetype class method)": [[13, "masmod.translator.cc_trans.ValueType.from_val"]], "is_name (masmod.translator.cc_trans.evaluatedexpr attribute)": [[13, "masmod.translator.cc_trans.EvaluatedExpr.is_name"]], "is_numeric() (masmod.translator.cc_trans.valuetype method)": [[13, "masmod.translator.cc_trans.ValueType.is_numeric"]], "masmod.translator": [[13, "module-masmod.translator"]], "masmod.translator.cc_trans": [[13, "module-masmod.translator.cc_trans"]], "masmod.translator.sympy_ast_trans": [[13, "module-masmod.translator.sympy_ast_trans"]], "result_variables (masmod.translator.cc_trans.funcsignature attribute)": [[13, "masmod.translator.cc_trans.FuncSignature.result_variables"]], "return_type (masmod.translator.cc_trans.funcsignature attribute)": [[13, "masmod.translator.cc_trans.FuncSignature.return_type"]], "to_cc_type() (masmod.translator.cc_trans.valuetype method)": [[13, "masmod.translator.cc_trans.ValueType.to_cc_type"]], "token (masmod.translator.cc_trans.evaluatedexpr attribute)": [[13, "masmod.translator.cc_trans.EvaluatedExpr.token"]], "translate() (masmod.translator.astsympytranslator method)": [[13, "masmod.translator.ASTSympyTranslator.translate"]], "translate() (masmod.translator.cctranslator method)": [[13, "masmod.translator.CCTranslator.translate"]], "translate() (masmod.translator.cc_trans.cctranslator method)": [[13, "masmod.translator.cc_trans.CCTranslator.translate"]], "translate() (masmod.translator.sympy_ast_trans.astsympytranslator method)": [[13, "masmod.translator.sympy_ast_trans.ASTSympyTranslator.translate"]], "typ (masmod.translator.cc_trans.evaluatedexpr attribute)": [[13, "masmod.translator.cc_trans.EvaluatedExpr.typ"]], "update_context (masmod.translator.cc_trans.funcsignature attribute)": [[13, "masmod.translator.cc_trans.FuncSignature.update_context"]], "v (masmod.translator.cc_trans.evaluatedexpr attribute)": [[13, "masmod.translator.cc_trans.EvaluatedExpr.v"]]}})